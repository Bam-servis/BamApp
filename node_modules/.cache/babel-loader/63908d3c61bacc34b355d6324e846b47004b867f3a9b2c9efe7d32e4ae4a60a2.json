{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { format, addMonths, subMonths } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const replaceSoftSign = str => str.replace(/ъ/g, \"\");\n  const sortedData = data.sort((a, b) => {\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n    const driverComparison = a.driver.localeCompare(b.driver);\n    if (driverComparison !== 0) return driverComparison;\n    return new Date(a.date) - new Date(b.date);\n  });\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = format(date, \"MMMM yyyy\", {\n        locale: ru\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) groups[monthYear] = {};\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const handleMonthChange = direction => {\n    const newMonth = direction === \"prev\" ? subMonths(currentMonth, 1) : addMonths(currentMonth, 1);\n    setCurrentMonth(newMonth);\n  };\n  const filteredData = sortedData.filter(item => {\n    const itemDate = new Date(item.date);\n    return itemDate.getMonth() === currentMonth.getMonth() && itemDate.getFullYear() === currentMonth.getFullYear();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [getMonthName(currentMonth), \" \", currentMonth.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"prev\"),\n      children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"next\"),\n      children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(new Date()),\n      children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438 \\u0437\\u0430 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u0443\\u044E \\u0434\\u0430\\u0442\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate,\n      onChange: e => setSelectedDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass(\"highlight\"),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441 \\u043A\\u043B\\u0430\\u0441\\u0441\\u043E\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: item.colorClass,\n        ref: isToday(item.date) ? currentDayRef : null,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: item.date,\n          onChange: e => handleDateChange(e, item._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.brand,\n          onChange: e => handleInputChange(e, item._id, \"brand\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: item.driver,\n          onChange: e => handleInputChange(e, item._id, \"driver\"),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: driver.name,\n            children: driver.name\n          }, driver._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.customer,\n          onChange: e => handleInputChange(e, item._id, \"customer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.routeNumber,\n          onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: item.hours,\n          onChange: e => handleInputChange(e, item._id, \"hours\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: item.isTrue,\n          onChange: e => handleCheckboxChange(e, item._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item.vehicleNumber,\n          onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: item.price,\n          onChange: e => handleInputChange(e, item._id, \"price\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteWithConfirmation(item._id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sNJzfdm3bHZEkKn48B2TbUOZOvw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","format","addMonths","subMonths","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","replaceSoftSign","str","replace","sortedData","sort","a","b","driverComparison","localeCompare","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","locale","day","getDate","push","isToday","itemDate","today","itemDay","getMonth","getFullYear","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","handleMonthChange","direction","newMonth","filteredData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { format, addMonths, subMonths } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const replaceSoftSign = (str) => str.replace(/ъ/g, \"\");\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n\r\n    const driverComparison = a.driver.localeCompare(b.driver);\r\n    if (driverComparison !== 0) return driverComparison;\r\n\r\n    return new Date(a.date) - new Date(b.date);\r\n  });\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = format(date, \"MMMM yyyy\", { locale: ru });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) groups[monthYear] = {};\r\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const handleMonthChange = (direction) => {\r\n    const newMonth =\r\n      direction === \"prev\"\r\n        ? subMonths(currentMonth, 1)\r\n        : addMonths(currentMonth, 1);\r\n    setCurrentMonth(newMonth);\r\n  };\r\n\r\n  const filteredData = sortedData.filter((item) => {\r\n    const itemDate = new Date(item.date);\r\n    return (\r\n      itemDate.getMonth() === currentMonth.getMonth() &&\r\n      itemDate.getFullYear() === currentMonth.getFullYear()\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {getMonthName(currentMonth)} {currentMonth.getFullYear()}\r\n      </h1>\r\n      <button onClick={() => handleMonthChange(\"prev\")}>\r\n        Предыдущий месяц\r\n      </button>\r\n      <button onClick={() => handleMonthChange(\"next\")}>Следующий месяц</button>\r\n      <button onClick={() => setCurrentMonth(new Date())}>Текущий месяц</button>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Добавить записи за выбранную дату\r\n      </button>\r\n      <input\r\n        type=\"date\"\r\n        value={selectedDate}\r\n        onChange={(e) => setSelectedDate(e.target.value)}\r\n      />\r\n      <button onClick={addNewItem}>Добавить новый элемент</button>\r\n\r\n      <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n        Добавить с классом\r\n      </button>\r\n      <div>\r\n        {filteredData.map((item) => (\r\n          <div\r\n            key={item._id}\r\n            className={item.colorClass}\r\n            ref={isToday(item.date) ? currentDayRef : null}\r\n          >\r\n            <input\r\n              type=\"date\"\r\n              value={item.date}\r\n              onChange={(e) => handleDateChange(e, item._id)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={item.brand}\r\n              onChange={(e) => handleInputChange(e, item._id, \"brand\")}\r\n            />\r\n            <select\r\n              value={item.driver}\r\n              onChange={(e) => handleInputChange(e, item._id, \"driver\")}\r\n            >\r\n              <option value=\"\">Выберите водителя</option>\r\n              {drivers.map((driver) => (\r\n                <option key={driver._id} value={driver.name}>\r\n                  {driver.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              value={item.customer}\r\n              onChange={(e) => handleInputChange(e, item._id, \"customer\")}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={item.routeNumber}\r\n              onChange={(e) => handleInputChange(e, item._id, \"routeNumber\")}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={item.hours}\r\n              onChange={(e) => handleInputChange(e, item._id, \"hours\")}\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={item.isTrue}\r\n              onChange={(e) => handleCheckboxChange(e, item._id)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={item.vehicleNumber}\r\n              onChange={(e) => handleInputChange(e, item._id, \"vehicleNumber\")}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={item.price}\r\n              onChange={(e) => handleInputChange(e, item._id, \"price\")}\r\n            />\r\n            <button onClick={() => handleDeleteWithConfirmation(item._id)}>\r\n              Удалить\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,cAAc;AACrB,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,QAAQ,UAAU;AACvD,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC;IACrCsB,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5CC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,KAAK;IACbC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAC9C,IAAIuB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CACvC,CAAC;EACD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,IAAIuB,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAMgB,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC9B,MAAM+B,aAAa,GAAGtC,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMwC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,gCAAgC,CAAC;QAClE5B,OAAO,CAAC2B,QAAQ,CAAC5B,IAAI,CAAC;MACxB,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMJ,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,mCAAmC,CAAC;QACrE1B,UAAU,CAACyB,QAAQ,CAAC5B,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;IACXK,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN7C,SAAS,CAAC,MAAM;IACd,IAAIuC,aAAa,CAACO,OAAO,EAAE;MACzBP,aAAa,CAACO,OAAO,CAACC,cAAc,CAAC;QACnCC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACpC,IAAI,CAAC,CAAC;EAEV,MAAMqC,eAAe,GAAIC,GAAG,IAAKA,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAEtD,MAAMC,UAAU,GAAGxC,IAAI,CAACyC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACrC,IAAID,CAAC,CAACtB,UAAU,KAAK,WAAW,IAAIuB,CAAC,CAACvB,UAAU,KAAK,WAAW,EAAE,OAAO,CAAC;IAC1E,IAAIsB,CAAC,CAACtB,UAAU,KAAK,WAAW,IAAIuB,CAAC,CAACvB,UAAU,KAAK,WAAW,EAAE,OAAO,CAAC,CAAC;IAE3E,MAAMwB,gBAAgB,GAAGF,CAAC,CAAC7B,MAAM,CAACgC,aAAa,CAACF,CAAC,CAAC9B,MAAM,CAAC;IACzD,IAAI+B,gBAAgB,KAAK,CAAC,EAAE,OAAOA,gBAAgB;IAEnD,OAAO,IAAInC,IAAI,CAACiC,CAAC,CAAClC,IAAI,CAAC,GAAG,IAAIC,IAAI,CAACkC,CAAC,CAACnC,IAAI,CAAC;EAC5C,CAAC,CAAC;EAEF,MAAMsC,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5C,IAAI;MACF,MAAMC,UAAU,GAAGzD,aAAa,CAAC0D,GAAG,CAAEC,IAAI,KAAM;QAC9C,GAAGA,IAAI;QACPzC,IAAI,EAAEa;MACR,CAAC,CAAC,CAAC;MAEH,MAAM6B,OAAO,CAACC,GAAG,CACfJ,UAAU,CAACC,GAAG,CAAEI,KAAK,IACnB/D,KAAK,CAACgE,IAAI,CAAC,gCAAgC,EAAED,KAAK,CACpD,CACF,CAAC;MAED,MAAMxB,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,gCAAgC,CAAC;MAClE5B,OAAO,CAAC2B,QAAQ,CAAC5B,IAAI,CAAC;IACxB,CAAC,CAAC,OAAO8B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMvC,KAAK,CAACgE,IAAI,CAAC,gCAAgC,EAAE;QAClE,GAAG/C,OAAO;QACViD,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;MAC5C,CAAC,CAAC;MACFxD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE4B,QAAQ,CAAC5B,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,OAAO8B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAM4B,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,MAAM,EAAEC,SAAS,KAAK;IAClD,MAAM;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGL,CAAC,CAACM,MAAM;IACzC,MAAMC,YAAY,GAAGH,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF,KAAK;IAC1D,MAAMK,QAAQ,GAAGX,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,MAAMW,WAAW,GAAGpE,IAAI,CAACgD,GAAG,CAAEC,IAAI,IAChCA,IAAI,CAACoB,GAAG,KAAKT,MAAM,GAAG;MAAE,GAAGX,IAAI;MAAE,CAACY,SAAS,GAAGK;IAAa,CAAC,GAAGjB,IACjE,CAAC;IACDhD,OAAO,CAACmE,WAAW,CAAC;IAEpB/E,KAAK,CACFiF,GAAG,CAAC,kCAAkCV,MAAM,EAAE,EAAE;MAC/C,GAAGQ,WAAW,CAACG,IAAI,CAAEtB,IAAI,IAAKA,IAAI,CAACoB,GAAG,KAAKT,MAAM,CAAC;MAClD,CAACC,SAAS,GAAGK,YAAY;MACzBX,SAAS,EAAEY;IACb,CAAC,CAAC,CACDK,KAAK,CAAE1C,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,MAAM2C,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C,IAAI;MACF,MAAM9C,QAAQ,GAAG,MAAMvC,KAAK,CAACgE,IAAI,CAAC,gCAAgC,EAAE;QAClE,GAAG/C,OAAO;QACVc,UAAU,EAAEsD,SAAS;QACrBnB,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;MAC5C,CAAC,CAAC;MACFxD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE4B,QAAQ,CAAC5B,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,OAAO8B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAM6C,oBAAoB,GAAG,MAAAA,CAAOhB,CAAC,EAAEC,MAAM,KAAK;IAChD,MAAM;MAAEI;IAAQ,CAAC,GAAGL,CAAC,CAACM,MAAM;IAE5B,MAAMW,WAAW,GAAGC,MAAM,CAACC,OAAO,CAChC,2DACF,CAAC;IACD,IAAI,CAACF,WAAW,EAAE;MAChB;IACF;IAEA,MAAMR,WAAW,GAAGpE,IAAI,CAACgD,GAAG,CAAEC,IAAI,IAChCA,IAAI,CAACoB,GAAG,KAAKT,MAAM,GAAG;MAAE,GAAGX,IAAI;MAAEhC,MAAM,EAAE+C;IAAQ,CAAC,GAAGf,IACvD,CAAC;IACDhD,OAAO,CAACmE,WAAW,CAAC;IAEpB,IAAI;MACF,MAAM/E,KAAK,CAACiF,GAAG,CAAC,kCAAkCV,MAAM,EAAE,EAAE;QAC1D,GAAGQ,WAAW,CAACG,IAAI,CAAEtB,IAAI,IAAKA,IAAI,CAACoB,GAAG,KAAKT,MAAM,CAAC;QAClD3C,MAAM,EAAE+C;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMiD,4BAA4B,GAAG,MAAOC,EAAE,IAAK;IACjD,MAAMJ,WAAW,GAAGC,MAAM,CAACC,OAAO,CAChC,4CACF,CAAC;IACD,IAAIF,WAAW,EAAE;MACf,IAAI;QACF,MAAMvF,KAAK,CAAC4F,MAAM,CAAC,kCAAkCD,EAAE,EAAE,CAAC;QAC1D/E,OAAO,CAACD,IAAI,CAACkF,MAAM,CAAEjC,IAAI,IAAKA,IAAI,CAACoB,GAAG,KAAKW,EAAE,CAAC,CAAC;MACjD,CAAC,CAAC,OAAOlD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EAED,MAAMqD,gBAAgB,GAAGA,CAACxB,CAAC,EAAEC,MAAM,KAAK;IACtC,MAAM;MAAEE;IAAM,CAAC,GAAGH,CAAC,CAACM,MAAM;IAC1B,MAAME,QAAQ,GAAGX,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,MAAMW,WAAW,GAAGpE,IAAI,CAACgD,GAAG,CAAEC,IAAI,IAChCA,IAAI,CAACoB,GAAG,KAAKT,MAAM,GAAG;MAAE,GAAGX,IAAI;MAAEzC,IAAI,EAAEsD;IAAM,CAAC,GAAGb,IACnD,CAAC;IACDhD,OAAO,CAACmE,WAAW,CAAC;IAEpB/E,KAAK,CACFiF,GAAG,CAAC,kCAAkCV,MAAM,EAAE,EAAE;MAC/C,GAAGQ,WAAW,CAACG,IAAI,CAAEtB,IAAI,IAAKA,IAAI,CAACoB,GAAG,KAAKT,MAAM,CAAC;MAClDpD,IAAI,EAAEsD,KAAK;MACXP,SAAS,EAAEY;IACb,CAAC,CAAC,CACDK,KAAK,CAAE1C,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC;EAED,MAAMsD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIhF,SAAS,CAACiF,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE7B,IAAI;MACF,MAAMzD,QAAQ,GAAG,MAAMvC,KAAK,CAACgE,IAAI,CAAC,mCAAmC,EAAE;QACrEiC,IAAI,EAAElF;MACR,CAAC,CAAC;MACFD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE0B,QAAQ,CAAC5B,IAAI,CAAC,CAAC;MACvCK,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMyD,kBAAkB,GAAIvF,IAAI,IAAK;IACnC,OAAOA,IAAI,CAACwF,MAAM,CAAC,CAACC,MAAM,EAAExC,IAAI,KAAK;MACnC,MAAMzC,IAAI,GAAG,IAAIC,IAAI,CAACwC,IAAI,CAACzC,IAAI,CAAC;MAChC,MAAMkF,SAAS,GAAGnG,MAAM,CAACiB,IAAI,EAAE,WAAW,EAAE;QAAEmF,MAAM,EAAEjG;MAAG,CAAC,CAAC;MAC3D,MAAMkG,GAAG,GAAGpF,IAAI,CAACqF,OAAO,CAAC,CAAC;MAE1B,IAAI,CAACJ,MAAM,CAACC,SAAS,CAAC,EAAED,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC,CAAC;MAC9C,IAAI,CAACD,MAAM,CAACC,SAAS,CAAC,CAACE,GAAG,CAAC,EAAEH,MAAM,CAACC,SAAS,CAAC,CAACE,GAAG,CAAC,GAAG,EAAE;MAExDH,MAAM,CAACC,SAAS,CAAC,CAACE,GAAG,CAAC,CAACE,IAAI,CAAC7C,IAAI,CAAC;MACjC,OAAOwC,MAAM;IACf,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAED,MAAMM,OAAO,GAAIC,QAAQ,IAAK;IAC5B,MAAMC,KAAK,GAAG,IAAIxF,IAAI,CAAC,CAAC;IACxB,MAAMyF,OAAO,GAAG,IAAIzF,IAAI,CAACuF,QAAQ,CAAC;IAClC,OACEC,KAAK,CAACJ,OAAO,CAAC,CAAC,KAAKK,OAAO,CAACL,OAAO,CAAC,CAAC,IACrCI,KAAK,CAACE,QAAQ,CAAC,CAAC,KAAKD,OAAO,CAACC,QAAQ,CAAC,CAAC,IACvCF,KAAK,CAACG,WAAW,CAAC,CAAC,KAAKF,OAAO,CAACE,WAAW,CAAC,CAAC;EAEjD,CAAC;EAED,MAAMC,YAAY,GAAI7F,IAAI,IAAK;IAC7B,MAAM8F,oBAAoB,GAAG;MAC3BC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,UAAU;MACpBC,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,SAAS,GAAG5H,MAAM,CAACiB,IAAI,EAAE,MAAM,EAAE;MAAEmF,MAAM,EAAEjG;IAAG,CAAC,CAAC;IACtD,OAAO4G,oBAAoB,CAACa,SAAS,CAAC,IAAIA,SAAS;EACrD,CAAC;EAED,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;IACvC,MAAMC,QAAQ,GACZD,SAAS,KAAK,MAAM,GAChB5H,SAAS,CAAC8B,YAAY,EAAE,CAAC,CAAC,GAC1B/B,SAAS,CAAC+B,YAAY,EAAE,CAAC,CAAC;IAChCC,eAAe,CAAC8F,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG/E,UAAU,CAAC0C,MAAM,CAAEjC,IAAI,IAAK;IAC/C,MAAM+C,QAAQ,GAAG,IAAIvF,IAAI,CAACwC,IAAI,CAACzC,IAAI,CAAC;IACpC,OACEwF,QAAQ,CAACG,QAAQ,CAAC,CAAC,KAAK5E,YAAY,CAAC4E,QAAQ,CAAC,CAAC,IAC/CH,QAAQ,CAACI,WAAW,CAAC,CAAC,KAAK7E,YAAY,CAAC6E,WAAW,CAAC,CAAC;EAEzD,CAAC,CAAC;EAEF,oBACEvG,OAAA;IAAA2H,QAAA,gBACE3H,OAAA;MAAA2H,QAAA,GACGnB,YAAY,CAAC9E,YAAY,CAAC,EAAC,GAAC,EAACA,YAAY,CAAC6E,WAAW,CAAC,CAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACL/H,OAAA;MAAQgI,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,MAAM,CAAE;MAAAI,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/H,OAAA;MAAQgI,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,MAAM,CAAE;MAAAI,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1E/H,OAAA;MAAQgI,OAAO,EAAEA,CAAA,KAAMrG,eAAe,CAAC,IAAIf,IAAI,CAAC,CAAC,CAAE;MAAA+G,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1E/H,OAAA;MAAQgI,OAAO,EAAE/E,yBAA0B;MAAA0E,QAAA,EAAC;IAE5C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/H,OAAA;MACEkE,IAAI,EAAC,MAAM;MACXD,KAAK,EAAEzC,YAAa;MACpByG,QAAQ,EAAGnE,CAAC,IAAKrC,eAAe,CAACqC,CAAC,CAACM,MAAM,CAACH,KAAK;IAAE;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF/H,OAAA;MAAQgI,OAAO,EAAEvE,UAAW;MAAAkE,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE5D/H,OAAA;MAAQgI,OAAO,EAAEA,CAAA,KAAMpD,mBAAmB,CAAC,WAAW,CAAE;MAAA+C,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/H,OAAA;MAAA2H,QAAA,EACGD,YAAY,CAACvE,GAAG,CAAEC,IAAI,iBACrBpD,OAAA;QAEE6E,SAAS,EAAEzB,IAAI,CAAC7B,UAAW;QAC3B2G,GAAG,EAAEhC,OAAO,CAAC9C,IAAI,CAACzC,IAAI,CAAC,GAAGkB,aAAa,GAAG,IAAK;QAAA8F,QAAA,gBAE/C3H,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEb,IAAI,CAACzC,IAAK;UACjBsH,QAAQ,EAAGnE,CAAC,IAAKwB,gBAAgB,CAACxB,CAAC,EAAEV,IAAI,CAACoB,GAAG;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEb,IAAI,CAACrC,KAAM;UAClBkH,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,OAAO;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACF/H,OAAA;UACEiE,KAAK,EAAEb,IAAI,CAACpC,MAAO;UACnBiH,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,QAAQ,CAAE;UAAAmD,QAAA,gBAE1D3H,OAAA;YAAQiE,KAAK,EAAC,EAAE;YAAA0D,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC1C1H,OAAO,CAAC8C,GAAG,CAAEnC,MAAM,iBAClBhB,OAAA;YAAyBiE,KAAK,EAAEjD,MAAM,CAACyE,IAAK;YAAAkC,QAAA,EACzC3G,MAAM,CAACyE;UAAI,GADDzE,MAAM,CAACwD,GAAG;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT/H,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEb,IAAI,CAACnC,QAAS;UACrBgH,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,UAAU;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEb,IAAI,CAAClC,WAAY;UACxB+G,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,aAAa;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,QAAQ;UACbD,KAAK,EAAEb,IAAI,CAACjC,KAAM;UAClB8G,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,OAAO;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEf,IAAI,CAAChC,MAAO;UACrB6G,QAAQ,EAAGnE,CAAC,IAAKgB,oBAAoB,CAAChB,CAAC,EAAEV,IAAI,CAACoB,GAAG;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEb,IAAI,CAAC/B,aAAc;UAC1B4G,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,eAAe;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACF/H,OAAA;UACEkE,IAAI,EAAC,QAAQ;UACbD,KAAK,EAAEb,IAAI,CAAC9B,KAAM;UAClB2G,QAAQ,EAAGnE,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEV,IAAI,CAACoB,GAAG,EAAE,OAAO;QAAE;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACF/H,OAAA;UAAQgI,OAAO,EAAEA,CAAA,KAAM9C,4BAA4B,CAAC9B,IAAI,CAACoB,GAAG,CAAE;UAAAmD,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAzDJ3E,IAAI,CAACoB,GAAG;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0DV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7H,EAAA,CA/VID,IAAI;EAAA,QAoBSH,WAAW;AAAA;AAAAqI,EAAA,GApBxBlI,IAAI;AAiWV,eAAeA,IAAI;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}