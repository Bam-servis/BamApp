{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BamApp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport \"./styles.css\"; // Импорт стилей для кнопок\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\" // Добавлен colorClass\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n\n  // Прокрутка к текущему дню после загрузки данных\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n\n  // Функция выхода из системы\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  // Сортировка данных по дате и затем по водителям\n  const sortedData = data.sort((a, b) => {\n    const dateComparison = new Date(a.date) - new Date(b.date);\n    if (dateComparison !== 0) return dateComparison;\n    return a.driver.localeCompare(b.driver);\n  });\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Функция для обработки подтверждения изменений\n  const handleChangeConfirmation = callback => {\n    if (window.confirm(\"You have unsaved changes. Are you sure you want to proceed?\")) {\n      callback();\n    }\n  };\n\n  // Обработка изменений даты\n  const handleDateChange = (e, itemId) => {\n    handleChangeConfirmation(() => {\n      const {\n        value\n      } = e.target;\n      setData(data.map(item => item._id === itemId ? {\n        ...item,\n        date: value,\n        hasChanged: true\n      } : item));\n      axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...data.find(item => item._id === itemId),\n        date: value\n      }).catch(error => console.error(\"Error updating date:\", error));\n    });\n  };\n\n  // Удаление строки данных\n  const handleDelete = async itemId => {\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${itemId}`);\n        setData(data.filter(item => item._id !== itemId));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n\n  // Добавление новой строки данных\n  const addNewItem = async () => {\n    handleChangeConfirmation(async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n        setData([...data, response.data]);\n        setNewItem({\n          date: new Date().toISOString().split(\"T\")[0],\n          brand: \"\",\n          driver: \"\",\n          customer: \"\",\n          routeNumber: \"\",\n          hours: \"\",\n          isTrue: false,\n          vehicleNumber: \"\",\n          price: \"\",\n          colorClass: \"\"\n        });\n      } catch (error) {\n        console.error(\"Error adding data:\", error);\n      }\n    });\n  };\n\n  // Добавление строки с определенным классом\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className // Добавляем класс\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n\n  // Обработка изменений инпутов\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n\n  // Добавление нового водителя\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n\n  // Определение текущего дня для прокрутки\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEntriesForSelectedDate,\n          children: \"Add 37 Entries for Selected Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewItem,\n          children: \"Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewItemWithClass(\"highlight\"),\n          children: \"Add New Item with Highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: items.some(item => isToday(item.date)) ? currentDayRef : null,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.sort((a, b) => {\n              if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n              if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n              return a.driver.localeCompare(b.driver);\n            }).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: item.colorClass || \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: item.date || \"\",\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 29\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver._id,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleInputChange(e, item._id, \"isTrue\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 27\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 25\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mowTSn0MyazWRHkrdvsTMokNMtQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","handleLogout","localStorage","removeItem","sortedData","sort","a","b","dateComparison","localeCompare","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","handleChangeConfirmation","callback","window","confirm","handleDateChange","e","itemId","value","target","_id","hasChanged","put","find","catch","handleDelete","delete","filter","addNewItem","addNewItemWithClass","className","handleInputChange","fieldName","type","checked","updatedValue","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","isToday","itemDate","today","itemDay","getMonth","getFullYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","ref","some","_c","$RefreshReg$"],"sources":["D:/project/BamApp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\nimport \"./styles.css\"; // Импорт стилей для кнопок\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\", // Добавлен colorClass\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  // Прокрутка к текущему дню после загрузки данных\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  }, [data]);\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // Сортировка данных по дате и затем по водителям\r\n  const sortedData = data.sort((a, b) => {\r\n    const dateComparison = new Date(a.date) - new Date(b.date);\r\n    if (dateComparison !== 0) return dateComparison;\r\n    return a.driver.localeCompare(b.driver);\r\n  });\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для обработки подтверждения изменений\r\n  const handleChangeConfirmation = (callback) => {\r\n    if (window.confirm(\"You have unsaved changes. Are you sure you want to proceed?\")) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  // Обработка изменений даты\r\n  const handleDateChange = (e, itemId) => {\r\n    handleChangeConfirmation(() => {\r\n      const { value } = e.target;\r\n      setData(\r\n        data.map((item) =>\r\n          item._id === itemId ? { ...item, date: value, hasChanged: true } : item\r\n        )\r\n      );\r\n      axios\r\n        .put(`http://localhost:5000/api/data/${itemId}`, {\r\n          ...data.find((item) => item._id === itemId),\r\n          date: value,\r\n        })\r\n        .catch((error) => console.error(\"Error updating date:\", error));\r\n    });\r\n  };\r\n\r\n  // Удаление строки данных\r\n  const handleDelete = async (itemId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${itemId}`);\r\n        setData(data.filter(item => item._id !== itemId));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Добавление новой строки данных\r\n  const addNewItem = async () => {\r\n    handleChangeConfirmation(async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\r\n        setData([...data, response.data]);\r\n        setNewItem({\r\n          date: new Date().toISOString().split(\"T\")[0],\r\n          brand: \"\",\r\n          driver: \"\",\r\n          customer: \"\",\r\n          routeNumber: \"\",\r\n          hours: \"\",\r\n          isTrue: false,\r\n          vehicleNumber: \"\",\r\n          price: \"\",\r\n          colorClass: \"\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error adding data:\", error);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Добавление строки с определенным классом\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className, // Добавляем класс\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  // Обработка изменений инпутов\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  // Добавление нового водителя\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  // Определение текущего дня для прокрутки\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Data Table</h1>\r\n        <div className=\"buttons\">\r\n          <button onClick={addEntriesForSelectedDate}>\r\n            Add 37 Entries for Selected Date\r\n          </button>\r\n          <button onClick={addNewItem}>Add New Item</button>\r\n          <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n            Add New Item with Highlight\r\n          </button>\r\n          <button onClick={handleLogout}>Logout</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div\r\n              key={day}\r\n              ref={items.some((item) => isToday(item.date)) ? currentDayRef : null}\r\n            >\r\n              <h3>Day {day}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>True/False</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                    <th>Actions</th> {/* Добавляем колонку для действий */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items\r\n                    .sort((a, b) => {\r\n                      if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n                      if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n                      return a.driver.localeCompare(b.driver);\r\n                    })\r\n                    .map((item) => (\r\n                      <tr key={item._id} className={item.colorClass || \"\"}>\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            value={item.date || \"\"}\r\n                            onChange={(e) => handleDateChange(e, item._id)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.brand || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"brand\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            value={item.driver || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"driver\")}\r\n                          >\r\n                            <option value=\"\">Select Driver</option>\r\n                            {drivers.map((driver) => (\r\n                              <option key={driver._id} value={driver._id}>\r\n                                {driver.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.customer || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"customer\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.routeNumber || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"routeNumber\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.hours || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"hours\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.isTrue || false}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"isTrue\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.vehicleNumber || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"vehicleNumber\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.price || \"\"}\r\n                            onChange={(e) => handleInputChange(e, item._id, \"price\")}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <button onClick={() => handleDelete(item._id)}>Delete</button> {/* Кнопка удаления */}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}