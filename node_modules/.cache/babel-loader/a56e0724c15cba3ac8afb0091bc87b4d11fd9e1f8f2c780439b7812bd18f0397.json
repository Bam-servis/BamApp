{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  const handleInputChange = (e, id, field) => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => prevData.map(item => item._id === id ? {\n      ...item,\n      [field]: value\n    } : item));\n  };\n  const handleDateChange = (e, id) => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => prevData.map(item => item._id === id ? {\n      ...item,\n      date: value\n    } : item));\n  };\n  const handleCheckboxChange = (e, id) => {\n    const {\n      checked\n    } = e.target;\n    setData(prevData => prevData.map(item => item._id === id ? {\n      ...item,\n      isTrue: checked\n    } : item));\n  };\n  const handleDeleteWithConfirmation = id => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n    if (confirmDelete) {\n      setData(prevData => prevData.filter(item => item._id !== id));\n      // Optionally, you can also send a delete request to the server here\n    }\n  };\n  const getMonthName = date => {\n    const month = format(new Date(date), \"MMMM\", {\n      locale: ru\n    });\n    return month.toUpperCase();\n  };\n  const replaceSoftSign = str => {\n    return str.replace(/ъ/g, \"\");\n  };\n  const isToday = date => {\n    const today = new Date();\n    const itemDate = new Date(date);\n    return today.toDateString() === itemDate.toDateString();\n  };\n  const groupByMonth = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      if (!groups[monthYear]) groups[monthYear] = [];\n      groups[monthYear].push(item);\n      return groups;\n    }, {});\n  };\n  const groupedByMonth = groupByMonth(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Months\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(groupedByMonth).map(month => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/month/${replaceSoftSign(month)}`,\n          children: replaceSoftSign(month)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"3XU77Af5MP4Pc/gFPwdwJg9wOl8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Link","format","ru","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","currentDayRef","fetchData","response","get","error","console","fetchDrivers","handleInputChange","e","id","field","value","target","prevData","map","item","_id","handleDateChange","date","handleCheckboxChange","checked","isTrue","handleDeleteWithConfirmation","confirmDelete","window","confirm","filter","getMonthName","month","Date","locale","toUpperCase","replaceSoftSign","str","replace","isToday","today","itemDate","toDateString","groupByMonth","reduce","groups","monthYear","toLocaleString","push","groupedByMonth","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport \"./styles.css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  const handleInputChange = (e, id, field) => {\r\n    const { value } = e.target;\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item._id === id ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDateChange = (e, id) => {\r\n    const { value } = e.target;\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item._id === id ? { ...item, date: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCheckboxChange = (e, id) => {\r\n    const { checked } = e.target;\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item._id === id ? { ...item, isTrue: checked } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = (id) => {\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (confirmDelete) {\r\n      setData((prevData) => prevData.filter((item) => item._id !== id));\r\n      // Optionally, you can also send a delete request to the server here\r\n    }\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const month = format(new Date(date), \"MMMM\", { locale: ru });\r\n    return month.toUpperCase();\r\n  };\r\n\r\n  const replaceSoftSign = (str) => {\r\n    return str.replace(/ъ/g, \"\");\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    const itemDate = new Date(date);\r\n    return today.toDateString() === itemDate.toDateString();\r\n  };\r\n\r\n  const groupByMonth = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      if (!groups[monthYear]) groups[monthYear] = [];\r\n      groups[monthYear].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const groupedByMonth = groupByMonth(data);\r\n\r\n  return (\r\n    <div>\r\n      <h1>All Months</h1>\r\n      <ul>\r\n        {Object.keys(groupedByMonth).map((month) => (\r\n          <li key={month}>\r\n            <Link to={`/month/${replaceSoftSign(month)}`}>\r\n              {replaceSoftSign(month)}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}