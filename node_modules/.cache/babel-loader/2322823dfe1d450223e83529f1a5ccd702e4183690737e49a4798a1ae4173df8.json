{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { format, addMonths, subMonths, parseISO } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    // Прокрутка к текущему дню после обновления данных\n    const timer = setTimeout(() => {\n      if (currentDayRef.current) {\n        currentDayRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n          inline: \"nearest\"\n        });\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [data]);\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const day = date.getDate();\n      if (!groups[day]) groups[day] = [];\n      groups[day].push(item);\n      return groups;\n    }, {});\n  };\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\n    const day = String(d.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  const handleMonthChange = direction => {\n    const newMonth = direction === \"prev\" ? subMonths(currentMonth, 1) : addMonths(currentMonth, 1);\n    setCurrentMonth(newMonth);\n  };\n  const sortedData = data.sort((a, b) => {\n    // Если одна из строк выделена, она должна быть внизу\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n\n    // Сортировка по дате\n    const dateComparison = new Date(a.date) - new Date(b.date);\n    if (dateComparison !== 0) return dateComparison;\n\n    // Сортировка по водителю\n    return a.driver.localeCompare(b.driver);\n  });\n\n  // Фильтрация данных по текущему месяцу и сортировка по дням внутри месяца\n  const filteredData = sortedData.filter(item => {\n    const itemDate = new Date(item.date);\n    return itemDate.getMonth() === currentMonth.getMonth() && itemDate.getFullYear() === currentMonth.getFullYear();\n  });\n  const groupedData = groupByDay(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [getMonthName(currentMonth), \" \", currentMonth.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"prev\"),\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"next\"),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(new Date()),\n      children: \"Current Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass(\"highlight\"),\n      children: \"Add Highlighted Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      className: \"add-entries\",\n      children: \"Add Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate,\n      onChange: e => setSelectedDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedData).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupedData[day].map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              ref: isToday(item.date) ? currentDayRef : null,\n              className: item.colorClass,\n              style: {\n                backgroundColor: isToday(item.date) ? \"#f0f0f0\" : \"transparent\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: formatDate(item.date) || \"\",\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver.name,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleCheckboxChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.colorClass || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"colorClass\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteWithConfirmation(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"OsxzeC7YJAvaFj0yuBqs6/VsMYo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","format","addMonths","subMonths","parseISO","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","currentDayRef","fetchData","response","get","error","console","fetchDrivers","timer","setTimeout","current","scrollIntoView","behavior","block","inline","clearTimeout","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","groupByDay","reduce","groups","day","getDate","push","isToday","itemDate","today","itemDay","getMonth","getFullYear","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","locale","formatDate","d","year","month","String","padStart","handleMonthChange","direction","newMonth","sortedData","sort","a","b","dateComparison","localeCompare","filteredData","groupedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","Object","keys","ref","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { format, addMonths, subMonths, parseISO } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Прокрутка к текущему дню после обновления данных\r\n    const timer = setTimeout(() => {\r\n      if (currentDayRef.current) {\r\n        currentDayRef.current.scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"center\",\r\n          inline: \"nearest\",\r\n        });\r\n      }\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [data]);\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const day = date.getDate();\r\n\r\n      if (!groups[day]) groups[day] = [];\r\n      groups[day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(d.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const handleMonthChange = (direction) => {\r\n    const newMonth =\r\n      direction === \"prev\"\r\n        ? subMonths(currentMonth, 1)\r\n        : addMonths(currentMonth, 1);\r\n    setCurrentMonth(newMonth);\r\n  };\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    // Если одна из строк выделена, она должна быть внизу\r\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n\r\n    // Сортировка по дате\r\n    const dateComparison = new Date(a.date) - new Date(b.date);\r\n    if (dateComparison !== 0) return dateComparison;\r\n\r\n    // Сортировка по водителю\r\n    return a.driver.localeCompare(b.driver);\r\n  });\r\n\r\n  // Фильтрация данных по текущему месяцу и сортировка по дням внутри месяца\r\n  const filteredData = sortedData.filter((item) => {\r\n    const itemDate = new Date(item.date);\r\n    return (\r\n      itemDate.getMonth() === currentMonth.getMonth() &&\r\n      itemDate.getFullYear() === currentMonth.getFullYear()\r\n    );\r\n  });\r\n\r\n  const groupedData = groupByDay(filteredData);\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {getMonthName(currentMonth)} {currentMonth.getFullYear()}\r\n      </h1>\r\n      <button onClick={() => handleMonthChange(\"prev\")}>Previous</button>\r\n      <button onClick={() => handleMonthChange(\"next\")}>Next</button>\r\n      <button onClick={() => setCurrentMonth(new Date())}>Current Month</button>\r\n      <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n        Add Highlighted Item\r\n      </button>\r\n      <button onClick={addEntriesForSelectedDate} className=\"add-entries\">\r\n        Add Entries for Selected Date\r\n      </button>\r\n\r\n      <input\r\n        type=\"date\"\r\n        value={selectedDate}\r\n        onChange={(e) => setSelectedDate(e.target.value)}\r\n      />\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n\r\n      <div>\r\n        {Object.keys(groupedData).map((day) => (\r\n          <div key={day}>\r\n            <h2>Day {day}</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Brand</th>\r\n                  <th>Driver</th>\r\n                  <th>Customer</th>\r\n                  <th>Route Number</th>\r\n                  <th>Hours</th>\r\n                  <th>True/False</th>\r\n                  <th>Vehicle Number</th>\r\n                  <th>Price</th>\r\n                  <th>Color</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedData[day].map((item) => (\r\n                  <tr\r\n                    key={item._id}\r\n                    ref={isToday(item.date) ? currentDayRef : null}\r\n                    className={item.colorClass}\r\n                    style={{\r\n                      backgroundColor: isToday(item.date)\r\n                        ? \"#f0f0f0\"\r\n                        : \"transparent\",\r\n                    }}\r\n                  >\r\n                    <td>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={formatDate(item.date) || \"\"}\r\n                        onChange={(e) => handleDateChange(e, item._id)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.brand || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"brand\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <select\r\n                        value={item.driver || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"driver\")\r\n                        }\r\n                      >\r\n                        <option value=\"\">Select Driver</option>\r\n                        {drivers.map((driver) => (\r\n                          <option key={driver._id} value={driver.name}>\r\n                            {driver.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.customer || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"customer\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.routeNumber || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"routeNumber\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.hours || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"hours\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={item.isTrue || false}\r\n                        onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.vehicleNumber || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"vehicleNumber\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.price || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"price\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.colorClass || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"colorClass\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => handleDeleteWithConfirmation(item._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}