{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BamApp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  const sortedData = data.sort((a, b) => {\n    // Сначала перемещаем строки с классом 'highlight' в конец\n    if (a.colorClass === 'highlight' && b.colorClass !== 'highlight') return 1;\n    if (a.colorClass !== 'highlight' && b.colorClass === 'highlight') return -1;\n\n    // Затем сортируем по водителям\n    const driverComparison = a.driver.localeCompare(b.driver);\n    if (driverComparison !== 0) return driverComparison;\n\n    // И наконец сортируем по дате\n    return new Date(a.date) - new Date(b.date);\n  });\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n      setData([...data, response.data]);\n      setNewItem({\n        date: new Date().toISOString().split(\"T\")[0],\n        brand: \"\",\n        driver: \"\",\n        customer: \"\",\n        routeNumber: \"\",\n        hours: \"\",\n        isTrue: false,\n        vehicleNumber: \"\",\n        price: \"\",\n        colorClass: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputFocus = (e, itemId, fieldName) => {\n    const {\n      value\n    } = e.target;\n    const currentItem = data.find(item => item._id === itemId);\n    if (currentItem && currentItem[fieldName] && value !== currentItem[fieldName]) {\n      const confirmChange = showWarning(\"Вы уверены, что хотите изменить это значение?\");\n      if (!confirmChange) {\n        e.target.blur();\n        return;\n      }\n    }\n    setActiveInput({\n      itemId,\n      fieldName\n    });\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/data/${id}`);\n      setData(data.filter(item => item._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const showWarning = message => {\n    return window.confirm(message);\n  };\n  const handleDeleteWithConfirmation = id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) handleDelete(id);\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) groups[monthYear] = {};\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const groupedData = groupByMonthAndDay(sortedData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEntriesForSelectedDate,\n        children: \"Add Entries for Selected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem.brand,\n        onChange: e => setNewItem({\n          ...newItem,\n          brand: e.target.value\n        }),\n        placeholder: \"Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), Object.keys(groupedData).map(monthYear => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: monthYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), Object.keys(groupedData[monthYear]).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), groupedData[monthYear][day].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: item.date === selectedDate ? currentDayRef : null,\n          className: item.colorClass,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.driver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.isTrue,\n            onChange: e => handleCheckboxChange(e, item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.brand,\n            onFocus: e => handleInputFocus(e, item._id, \"brand\"),\n            onChange: e => handleInputChange(e, item._id, \"brand\"),\n            placeholder: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteWithConfirmation(item._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this))]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this))]\n    }, monthYear, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"y7+ZjuTd/3/moVl2AVAzPv75OWY=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","handleLogout","localStorage","removeItem","sortedData","sort","a","b","driverComparison","localeCompare","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","handleInputFocus","e","itemId","fieldName","value","target","currentItem","find","_id","confirmChange","showWarning","blur","setActiveInput","handleInputChange","type","checked","updatedValue","updatedData","put","catch","addNewItemWithClass","className","handleDelete","id","delete","filter","handleCheckboxChange","isConfirmed","window","confirm","message","handleDeleteWithConfirmation","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","groupedData","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","Object","keys","ref","onFocus","_c","$RefreshReg$"],"sources":["D:/project/BamApp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  }, [data]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const sortedData = data\r\n    .sort((a, b) => {\r\n      // Сначала перемещаем строки с классом 'highlight' в конец\r\n      if (a.colorClass === 'highlight' && b.colorClass !== 'highlight') return 1;\r\n      if (a.colorClass !== 'highlight' && b.colorClass === 'highlight') return -1;\r\n\r\n      // Затем сортируем по водителям\r\n      const driverComparison = a.driver.localeCompare(b.driver);\r\n      if (driverComparison !== 0) return driverComparison;\r\n\r\n      // И наконец сортируем по дате\r\n      return new Date(a.date) - new Date(b.date);\r\n    });\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\r\n      setData([...data, response.data]);\r\n      setNewItem({\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n        brand: \"\",\r\n        driver: \"\",\r\n        customer: \"\",\r\n        routeNumber: \"\",\r\n        hours: \"\",\r\n        isTrue: false,\r\n        vehicleNumber: \"\",\r\n        price: \"\",\r\n        colorClass: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputFocus = (e, itemId, fieldName) => {\r\n    const { value } = e.target;\r\n    const currentItem = data.find((item) => item._id === itemId);\r\n\r\n    if (currentItem && currentItem[fieldName] && value !== currentItem[fieldName]) {\r\n      const confirmChange = showWarning(\"Вы уверены, что хотите изменить это значение?\");\r\n      if (!confirmChange) {\r\n        e.target.blur();\r\n        return;\r\n      }\r\n    }\r\n\r\n    setActiveInput({ itemId, fieldName });\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n      setData(data.filter(item => item._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const showWarning = (message) => {\r\n    return window.confirm(message);\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = (id) => {\r\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\r\n    if (isConfirmed) handleDelete(id);\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) groups[monthYear] = {};\r\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const groupedData = groupByMonthAndDay(sortedData);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <button onClick={addEntriesForSelectedDate}>Add Entries for Selected Date</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"New Driver\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add Driver</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newItem.brand}\r\n          onChange={(e) => setNewItem({ ...newItem, brand: e.target.value })}\r\n          placeholder=\"Brand\"\r\n        />\r\n        {/* Add more fields here */}\r\n        <button onClick={addNewItem}>Add New Item</button>\r\n      </div>\r\n      {Object.keys(groupedData).map((monthYear) => (\r\n        <div key={monthYear}>\r\n          <h2>{monthYear}</h2>\r\n          {Object.keys(groupedData[monthYear]).map((day) => (\r\n            <div key={day}>\r\n              <h3>{day}</h3>\r\n              {groupedData[monthYear][day].map((item) => (\r\n                <div\r\n                  key={item._id}\r\n                  ref={item.date === selectedDate ? currentDayRef : null}\r\n                  className={item.colorClass}\r\n                >\r\n                  <span>{item.driver}</span>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={item.isTrue}\r\n                    onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={item.brand}\r\n                    onFocus={(e) => handleInputFocus(e, item._id, \"brand\")}\r\n                    onChange={(e) => handleInputChange(e, item._id, \"brand\")}\r\n                    placeholder=\"Brand\"\r\n                  />\r\n                  {/* Add more fields here */}\r\n                  <button onClick={() => handleDeleteWithConfirmation(item._id)}>Delete</button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}