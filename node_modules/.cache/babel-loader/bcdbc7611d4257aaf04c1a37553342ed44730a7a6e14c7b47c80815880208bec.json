{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\frontend\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport \"./styles.css\"; // Импорт стилей для кнопок\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\" // Добавлен colorClass\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      setData(prevData => [...prevData, ...newEntries]);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n      setData(prevData => [...prevData, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      // Обновляем состояние newItem с новым классом\n      const updatedItem = {\n        ...newItem,\n        colorClass: className\n      };\n      console.log(\"Adding item with class:\", updatedItem);\n      const response = await axios.post(\"http://localhost:5000/api/data\", updatedItem);\n      console.log(\"Response from server:\", response.data); // Логируем ответ от сервера\n\n      setData(prevData => [...prevData, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const getRowClass = item => {\n    return item.colorClass || \"\";\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setData(prevData => prevData.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => prevData.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers(prevDrivers => [...prevDrivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass(\"highlight\"),\n      children: \"Add New Item with Highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: getRowClass(item),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: new Date(item.date).toISOString().split(\"T\")[0],\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 27\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver._id,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleInputChange(e, item._id, \"isTrue\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"YEKjoL9q3d7FknHAEWHprWfQaNQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","hardcodedData","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","fetchData","response","get","error","console","fetchDrivers","sortedData","sort","a","b","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","prevData","addNewItem","addNewItemWithClass","className","updatedItem","log","getRowClass","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","name","prevDrivers","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/frontend/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\nimport \"./styles.css\"; // Импорт стилей для кнопок\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\", // Добавлен colorClass\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      setData((prevData) => [...prevData, ...newEntries]);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        newItem\r\n      );\r\n      setData((prevData) => [...prevData, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      // Обновляем состояние newItem с новым классом\r\n      const updatedItem = { ...newItem, colorClass: className };\r\n      console.log(\"Adding item with class:\", updatedItem);\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        updatedItem\r\n      );\r\n      console.log(\"Response from server:\", response.data); // Логируем ответ от сервера\r\n\r\n      setData((prevData) => [...prevData, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const getRowClass = (item) => {\r\n    return item.colorClass || \"\";\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item._id === itemId ? { ...item, date: value } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        date: value,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers((prevDrivers) => [...prevDrivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n      <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n        Add New Item with Highlight\r\n      </button>\r\n\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n\r\n      {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div key={day}>\r\n              <h3>Day {day}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>True/False</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item) => (\r\n                    <tr key={item._id} className={getRowClass(item)}>\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={\r\n                            new Date(item.date).toISOString().split(\"T\")[0]\r\n                          }\r\n                          onChange={(e) => handleDateChange(e, item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.brand || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"brand\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={item.driver || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"driver\")\r\n                          }\r\n                        >\r\n                          <option value=\"\">Select a driver</option>\r\n                          {drivers.map((driver) => (\r\n                            <option key={driver._id} value={driver._id}>\r\n                              {driver.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.customer || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"customer\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.routeNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"routeNumber\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.hours || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"hours\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue || false}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"isTrue\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.vehicleNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"vehicleNumber\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.price || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"price\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}