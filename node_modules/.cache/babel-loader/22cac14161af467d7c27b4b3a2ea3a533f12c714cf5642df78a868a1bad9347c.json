{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { format, addMonths, subMonths } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    comment: \"\",\n    user: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const firstItemRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/users\");\n        setUsers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching setUsers:\", error);\n      }\n    };\n    fetchUsers();\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (firstItemRef.current) {\n      firstItemRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data, currentMonth]);\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate,\n        createdBy: \"Static\"\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\"),\n        createdBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const itemUser = \"2323\";\n    // Проверка для поля с часами\n    if (fieldName === \"hours\" || fieldName === \"routeNumber\") {\n      if (username !== itemUser) {\n        alert(\"У вас нет прав для редактирования часов.\");\n        return;\n      }\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    if (username !== \"2323\") {\n      alert(\"У вас нет прав для изменения состояния чекбокса.\");\n      return;\n    }\n    if (!checked) {\n      const isConfirmed = window.confirm(\"Вы уверены, что хотите снять чекбокс?\");\n      if (!isConfirmed) {\n        return;\n      }\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    if (username !== \"2323\") {\n      alert(\"У вас нет прав для изменения состояния чекбокса.\");\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const day = date.getDate();\n      if (!groups[day]) groups[day] = [];\n      groups[day].push(item);\n      return groups;\n    }, {});\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\n    const day = String(d.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: getMonthName(currentMonth)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(subMonths(currentMonth, 1)),\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(new Date()),\n      children: \"Current Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(addMonths(currentMonth, 1)),\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Data for \", format(currentMonth, \"MMMM yyyy\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addEntriesForSelectedDate(),\n        children: \"Add Entries for Selected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Driver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Route Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vehicle Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(groupByDay(data)).map(([day, items]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              ref: index === 0 ? firstItemRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(item.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver.name,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.comment || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"comment\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteWithConfirmation(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleCheckboxChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: formatDate(item.date),\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this))\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Brand\",\n        value: newItem.brand,\n        onChange: e => setNewItem({\n          ...newItem,\n          brand: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Driver\",\n        value: newItem.driver,\n        onChange: e => setNewItem({\n          ...newItem,\n          driver: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Customer\",\n        value: newItem.customer,\n        onChange: e => setNewItem({\n          ...newItem,\n          customer: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Route Number\",\n        value: newItem.routeNumber,\n        onChange: e => setNewItem({\n          ...newItem,\n          routeNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Hours\",\n        value: newItem.hours,\n        onChange: e => setNewItem({\n          ...newItem,\n          hours: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Vehicle Number\",\n        value: newItem.vehicleNumber,\n        onChange: e => setNewItem({\n          ...newItem,\n          vehicleNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: newItem.price,\n        onChange: e => setNewItem({\n          ...newItem,\n          price: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Comment\",\n        value: newItem.comment,\n        onChange: e => setNewItem({\n          ...newItem,\n          comment: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNewItemWithClass(\"highlight\"),\n        children: \"Add New Item with Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"rTpdZaZ9x1F/EXg8KvlEvZGAGjI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","format","addMonths","subMonths","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","users","setUsers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","comment","user","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","firstItemRef","fetchData","response","get","error","console","fetchDrivers","fetchUsers","current","scrollIntoView","behavior","block","addEntriesForSelectedDate","newEntries","map","item","createdBy","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","itemUser","alert","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","groupByDay","reduce","groups","day","getDate","push","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","locale","formatDate","d","year","getFullYear","month","String","getMonth","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","Object","entries","items","Fragment","index","ref","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { format, addMonths, subMonths } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    comment: \"\",\r\n    user: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const firstItemRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/users\");\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching setUsers:\", error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (firstItemRef.current) {\r\n      firstItemRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data, currentMonth]);\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n        createdBy: \"Static\",\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n        createdBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n    const itemUser = \"2323\";\r\n    // Проверка для поля с часами\r\n    if (fieldName === \"hours\" || fieldName === \"routeNumber\") {\r\n      if (username !== itemUser) {\r\n        alert(\"У вас нет прав для редактирования часов.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n    if (username !== \"2323\") {\r\n      alert(\"У вас нет прав для изменения состояния чекбокса.\");\r\n      return;\r\n    }\r\n    if (!checked) {\r\n      const isConfirmed = window.confirm(\r\n        \"Вы уверены, что хотите снять чекбокс?\"\r\n      );\r\n      if (!isConfirmed) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    if (username !== \"2323\") {\r\n      alert(\"У вас нет прав для изменения состояния чекбокса.\");\r\n      return;\r\n    }\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const day = date.getDate();\r\n\r\n      if (!groups[day]) groups[day] = [];\r\n      groups[day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(d.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>{getMonthName(currentMonth)}</h1>\r\n      <button onClick={() => setCurrentMonth(subMonths(currentMonth, 1))}>\r\n        Previous Month\r\n      </button>\r\n      <button onClick={() => setCurrentMonth(new Date())}>Current Month</button>\r\n      <button onClick={() => setCurrentMonth(addMonths(currentMonth, 1))}>\r\n        Next Month\r\n      </button>\r\n      <div>\r\n        <h2>Add New Driver</h2>\r\n        <input\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add Driver</button>\r\n      </div>\r\n      <div>\r\n        <h2>Data for {format(currentMonth, \"MMMM yyyy\")}</h2>\r\n        <button onClick={() => addEntriesForSelectedDate()}>\r\n          Add Entries for Selected Date\r\n        </button>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Brand</th>\r\n              <th>Driver</th>\r\n              <th>Customer</th>\r\n              <th>Route Number</th>\r\n              <th>Hours</th>\r\n              <th>Vehicle Number</th>\r\n              <th>Price</th>\r\n              <th>Comment</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(groupByDay(data)).map(([day, items]) => (\r\n              <React.Fragment key={day}>\r\n                {items.map((item, index) => (\r\n                  <tr key={item._id} ref={index === 0 ? firstItemRef : null}>\r\n                    <td>{formatDate(item.date)}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.brand || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"brand\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <select\r\n                        value={item.driver || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"driver\")\r\n                        }\r\n                      >\r\n                        <option value=\"\">Select Driver</option>\r\n                        {drivers.map((driver) => (\r\n                          <option key={driver._id} value={driver.name}>\r\n                            {driver.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.customer || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"customer\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.routeNumber || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"routeNumber\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.hours || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"hours\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.vehicleNumber || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"vehicleNumber\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.price || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"price\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.comment || \"\"}\r\n                        onChange={(e) =>\r\n                          handleInputChange(e, item._id, \"comment\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => handleDeleteWithConfirmation(item._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={item.isTrue || false}\r\n                        onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                      />\r\n                      <input\r\n                        type=\"date\"\r\n                        value={formatDate(item.date)}\r\n                        onChange={(e) => handleDateChange(e, item._id)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <h2>Add New Item</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Brand\"\r\n          value={newItem.brand}\r\n          onChange={(e) => setNewItem({ ...newItem, brand: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Driver\"\r\n          value={newItem.driver}\r\n          onChange={(e) => setNewItem({ ...newItem, driver: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Customer\"\r\n          value={newItem.customer}\r\n          onChange={(e) => setNewItem({ ...newItem, customer: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Route Number\"\r\n          value={newItem.routeNumber}\r\n          onChange={(e) =>\r\n            setNewItem({ ...newItem, routeNumber: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Hours\"\r\n          value={newItem.hours}\r\n          onChange={(e) => setNewItem({ ...newItem, hours: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Vehicle Number\"\r\n          value={newItem.vehicleNumber}\r\n          onChange={(e) =>\r\n            setNewItem({ ...newItem, vehicleNumber: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n          value={newItem.price}\r\n          onChange={(e) => setNewItem({ ...newItem, price: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Comment\"\r\n          value={newItem.comment}\r\n          onChange={(e) => setNewItem({ ...newItem, comment: e.target.value })}\r\n        />\r\n        <button onClick={addNewItem}>Add New Item</button>\r\n        <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n          Add New Item with Class\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}