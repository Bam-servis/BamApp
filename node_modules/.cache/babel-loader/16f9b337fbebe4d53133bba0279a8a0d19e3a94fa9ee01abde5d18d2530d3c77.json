{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BamApp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { hardcodedData } from './hardcodedData'; // Убедитесь, что путь правильный\nimport './styles.css'; // Импорт стилей для кнопок\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState('');\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split('T')[0],\n    brand: '',\n    driver: '',\n    customer: '',\n    routeNumber: '',\n    hours: '',\n    isTrue: false,\n    vehicleNumber: '',\n    price: '',\n    colorClass: ''\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [inputWarnings, setInputWarnings] = useState({});\n  const currentDayRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/drivers');\n        setDrivers(response.data);\n      } catch (error) {\n        console.error('Error fetching drivers:', error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n\n  // Функция выхода из системы\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username'); // Очистка имени пользователя при выходе\n    navigate('/login');\n  };\n\n  // Сортировка данных\n  const sortData = data => {\n    const highlightedItems = data.filter(item => item.colorClass === 'highlight');\n    const nonHighlightedItems = data.filter(item => item.colorClass !== 'highlight');\n    const sortedNonHighlightedItems = nonHighlightedItems.sort((a, b) => {\n      if (a.driver < b.driver) return -1;\n      if (a.driver > b.driver) return 1;\n      return 0;\n    });\n    return [...sortedNonHighlightedItems, ...highlightedItems];\n  };\n  const sortedData = sortData(data);\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate,\n        updatedBy: localStorage.getItem('username')\n      }));\n      await Promise.all(newEntries.map(entry => axios.post('http://localhost:5000/api/data', entry)));\n      const response = await axios.get('http://localhost:5000/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error adding entries:', error);\n    }\n  };\n\n  // Добавление одной строки данных\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/data', {\n        ...newItem,\n        updatedBy: localStorage.getItem('username')\n      });\n      setData([...data, response.data]);\n      setNewItem({\n        date: new Date().toISOString().split('T')[0],\n        brand: '',\n        driver: '',\n        customer: '',\n        routeNumber: '',\n        hours: '',\n        isTrue: false,\n        vehicleNumber: '',\n        price: '',\n        colorClass: ''\n      });\n    } catch (error) {\n      console.error('Error adding data:', error);\n    }\n  };\n\n  // Добавление строки с определенным классом\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/data', {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem('username')\n      });\n      setData([...data, response.data]);\n      setNewItem({\n        date: new Date().toISOString().split('T')[0],\n        brand: '',\n        driver: '',\n        customer: '',\n        routeNumber: '',\n        hours: '',\n        isTrue: false,\n        vehicleNumber: '',\n        price: '',\n        colorClass: ''\n      });\n    } catch (error) {\n      console.error('Error adding data with class:', error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === 'checkbox' ? checked : value;\n    const username = localStorage.getItem('username');\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error('Error saving data:', error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem('username');\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error('Error updating date:', error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === '') return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/drivers', {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver('');\n    } catch (error) {\n      console.error('Error adding driver:', error);\n    }\n  };\n\n  // Функция для удаления строки\n  const handleDeleteItem = async itemId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/data/${itemId}`);\n      setData(data.filter(item => item._id !== itemId));\n    } catch (error) {\n      console.error('Error deleting data:', error);\n    }\n  };\n\n  // Функция для отслеживания изменения фокуса инпутов\n  const handleInputFocus = itemId => {\n    setInputWarnings(prev => ({\n      ...prev,\n      [itemId]: data.find(item => item._id === itemId).updatedBy\n    }));\n  };\n\n  // Прокрутка к текущему дню при рендере\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedDate]);\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass('highlight'),\n      children: \"Add New Item with Highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([monthYear, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: monthYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          ref: currentDayRef,\n          children: `Day ${day}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is True\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: item.colorClass,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: item.date || '',\n                  onChange: e => handleDateChange(e, item._id),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || '',\n                  onChange: e => handleInputChange(e, item._id, 'brand'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || '',\n                  onChange: e => handleInputChange(e, item._id, 'driver'),\n                  onFocus: () => handleInputFocus(item._id),\n                  children: drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver.name,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || '',\n                  onChange: e => handleInputChange(e, item._id, 'customer'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || '',\n                  onChange: e => handleInputChange(e, item._id, 'routeNumber'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || '',\n                  onChange: e => handleInputChange(e, item._id, 'hours'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleInputChange(e, item._id, 'isTrue')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || '',\n                  onChange: e => handleInputChange(e, item._id, 'vehicleNumber'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || '',\n                  onChange: e => handleInputChange(e, item._id, 'price'),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteItem(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this))]\n    }, monthYear, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"xfCM4SknFu+P7pzrVHdsZoQ7GHU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","inputWarnings","setInputWarnings","currentDayRef","navigate","fetchData","response","get","error","console","fetchDrivers","handleLogout","localStorage","removeItem","sortData","highlightedItems","filter","item","nonHighlightedItems","sortedNonHighlightedItems","sort","a","b","sortedData","addEntriesForSelectedDate","newEntries","map","updatedBy","getItem","Promise","all","entry","post","addNewItem","addNewItemWithClass","className","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","name","handleDeleteItem","delete","handleInputFocus","prev","current","scrollIntoView","behavior","block","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","year","day","getDate","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","ref","onFocus","_c","$RefreshReg$"],"sources":["D:/project/BamApp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { hardcodedData } from './hardcodedData'; // Убедитесь, что путь правильный\r\nimport './styles.css'; // Импорт стилей для кнопок\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState('');\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    brand: '',\r\n    driver: '',\r\n    customer: '',\r\n    routeNumber: '',\r\n    hours: '',\r\n    isTrue: false,\r\n    vehicleNumber: '',\r\n    price: '',\r\n    colorClass: '',\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [inputWarnings, setInputWarnings] = useState({});\r\n  const currentDayRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/data');\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/drivers');\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching drivers:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username'); // Очистка имени пользователя при выходе\r\n    navigate('/login');\r\n  };\r\n\r\n  // Сортировка данных\r\n  const sortData = (data) => {\r\n    const highlightedItems = data.filter(item => item.colorClass === 'highlight');\r\n    const nonHighlightedItems = data.filter(item => item.colorClass !== 'highlight');\r\n\r\n    const sortedNonHighlightedItems = nonHighlightedItems.sort((a, b) => {\r\n      if (a.driver < b.driver) return -1;\r\n      if (a.driver > b.driver) return 1;\r\n      return 0;\r\n    });\r\n\r\n    return [...sortedNonHighlightedItems, ...highlightedItems];\r\n  };\r\n\r\n  const sortedData = sortData(data);\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map(item => ({\r\n        ...item,\r\n        date: selectedDate,\r\n        updatedBy: localStorage.getItem('username'),\r\n      }));\r\n\r\n      await Promise.all(newEntries.map(entry =>\r\n        axios.post('http://localhost:5000/api/data', entry)\r\n      ));\r\n\r\n      const response = await axios.get('http://localhost:5000/api/data');\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error('Error adding entries:', error);\r\n    }\r\n  };\r\n\r\n  // Добавление одной строки данных\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/data', {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem('username'),\r\n      });\r\n      setData([...data, response.data]);\r\n      setNewItem({\r\n        date: new Date().toISOString().split('T')[0],\r\n        brand: '',\r\n        driver: '',\r\n        customer: '',\r\n        routeNumber: '',\r\n        hours: '',\r\n        isTrue: false,\r\n        vehicleNumber: '',\r\n        price: '',\r\n        colorClass: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding data:', error);\r\n    }\r\n  };\r\n\r\n  // Добавление строки с определенным классом\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/data', {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem('username'),\r\n      });\r\n      setData([...data, response.data]);\r\n      setNewItem({\r\n        date: new Date().toISOString().split('T')[0],\r\n        brand: '',\r\n        driver: '',\r\n        customer: '',\r\n        routeNumber: '',\r\n        hours: '',\r\n        isTrue: false,\r\n        vehicleNumber: '',\r\n        price: '',\r\n        colorClass: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding data with class:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === 'checkbox' ? checked : value;\r\n    const username = localStorage.getItem('username');\r\n\r\n    setData(data.map(item =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    ));\r\n\r\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n      ...data.find(item => item._id === itemId),\r\n      [fieldName]: updatedValue,\r\n      updatedBy: username,\r\n    }).catch(error => console.error('Error saving data:', error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem('username');\r\n\r\n    setData(data.map(item =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    ));\r\n\r\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n      ...data.find(item => item._id === itemId),\r\n      date: value,\r\n      updatedBy: username,\r\n    }).catch(error => console.error('Error updating date:', error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === '') return;\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/drivers', {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver('');\r\n    } catch (error) {\r\n      console.error('Error adding driver:', error);\r\n    }\r\n  };\r\n\r\n  // Функция для удаления строки\r\n  const handleDeleteItem = async (itemId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/data/${itemId}`);\r\n      setData(data.filter(item => item._id !== itemId));\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n  // Функция для отслеживания изменения фокуса инпутов\r\n  const handleInputFocus = (itemId) => {\r\n    setInputWarnings(prev => ({\r\n      ...prev,\r\n      [itemId]: data.find(item => item._id === itemId).updatedBy,\r\n    }));\r\n  };\r\n\r\n  // Прокрутка к текущему дню при рендере\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString('default', { month: 'long', year: 'numeric' });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n      <button onClick={() => addNewItemWithClass('highlight')}>\r\n        Add New Item with Highlight\r\n      </button>\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      {Object.entries(groupByMonthAndDay(sortedData)).map(([monthYear, days]) => (\r\n        <div key={monthYear}>\r\n          <h2>{monthYear}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div key={day}>\r\n              <h3 ref={currentDayRef}>{`Day ${day}`}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>Is True</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item) => (\r\n                    <tr key={item._id} className={item.colorClass}>\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={item.date || ''}\r\n                          onChange={(e) => handleDateChange(e, item._id)}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.brand || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'brand')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={item.driver || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'driver')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        >\r\n                          {drivers.map((driver) => (\r\n                            <option key={driver._id} value={driver.name}>\r\n                              {driver.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.customer || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'customer')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.routeNumber || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'routeNumber')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.hours || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'hours')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue || false}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'isTrue')}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.vehicleNumber || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'vehicleNumber')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.price || ''}\r\n                          onChange={(e) => handleInputChange(e, item._id, 'price')}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button onClick={() => handleDeleteItem(item._id)}>Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}