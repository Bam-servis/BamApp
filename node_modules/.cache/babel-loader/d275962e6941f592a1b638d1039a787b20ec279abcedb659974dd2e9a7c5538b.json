{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\frontend\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n\n  // Сортировка данных по дате\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      setData([...data, ...newEntries]);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Добавление одной строки данных\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам\n  const groupByMonth = data => {\n    return data.reduce((groups, item) => {\n      const month = new Date(item.date).toLocaleString(\"default\", {\n        month: \"long\",\n        year: \"numeric\"\n      });\n      if (!groups[month]) {\n        groups[month] = [];\n      }\n      groups[month].push(item);\n      return groups;\n    }, {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonth(sortedData)).map(([month, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Driver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Route Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"True/False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vehicle Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: new Date(item.date).toISOString().split(\"T\")[0],\n                onChange: e => handleDateChange(e, item._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.brand || \"\",\n                onChange: e => handleInputChange(e, item._id, \"brand\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: item.driver || \"\",\n                onChange: e => handleInputChange(e, item._id, \"driver\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: driver._id,\n                  children: driver.name\n                }, driver._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.customer || \"\",\n                onChange: e => handleInputChange(e, item._id, \"customer\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.routeNumber || \"\",\n                onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.hours || \"\",\n                onChange: e => handleInputChange(e, item._id, \"hours\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: item.isTrue || false,\n                onChange: e => handleInputChange(e, item._id, \"isTrue\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.vehicleNumber || \"\",\n                onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item.price || \"\",\n                onChange: e => handleInputChange(e, item._id, \"price\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"QHs01oH5NlyiPkHwqHu0WCagWT4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","hardcodedData","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","selectedDate","setSelectedDate","fetchData","response","get","error","console","fetchDrivers","sortedData","sort","a","b","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","name","groupByMonth","reduce","groups","month","toLocaleString","year","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","items","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/frontend/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  // Сортировка данных по дате\r\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      setData([...data, ...newEntries]);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление одной строки данных\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        newItem\r\n      );\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, date: value } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        date: value,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам\r\n  const groupByMonth = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const month = new Date(item.date).toLocaleString(\"default\", {\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      });\r\n\r\n      if (!groups[month]) {\r\n        groups[month] = [];\r\n      }\r\n      groups[month].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n\r\n      {Object.entries(groupByMonth(sortedData)).map(([month, items]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Brand</th>\r\n                <th>Driver</th>\r\n                <th>Customer</th>\r\n                <th>Route Number</th>\r\n                <th>Hours</th>\r\n                <th>True/False</th>\r\n                <th>Vehicle Number</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item) => (\r\n                <tr key={item._id}>\r\n                  <td>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={new Date(item.date).toISOString().split(\"T\")[0]}\r\n                      onChange={(e) => handleDateChange(e, item._id)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.brand || \"\"}\r\n                      onChange={(e) => handleInputChange(e, item._id, \"brand\")}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={item.driver || \"\"}\r\n                      onChange={(e) => handleInputChange(e, item._id, \"driver\")}\r\n                    >\r\n                      <option value=\"\">Select a driver</option>\r\n                      {drivers.map((driver) => (\r\n                        <option key={driver._id} value={driver._id}>\r\n                          {driver.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.customer || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(e, item._id, \"customer\")\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.routeNumber || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(e, item._id, \"routeNumber\")\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.hours || \"\"}\r\n                      onChange={(e) => handleInputChange(e, item._id, \"hours\")}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={item.isTrue || false}\r\n                      onChange={(e) => handleInputChange(e, item._id, \"isTrue\")}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.vehicleNumber || \"\"}\r\n                      onChange={(e) =>\r\n                        handleInputChange(e, item._id, \"vehicleNumber\")\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.price || \"\"}\r\n                      onChange={(e) => handleInputChange(e, item._id, \"price\")}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}