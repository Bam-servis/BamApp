{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BamApp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport \"./styles.css\"; // Импорт стилей для кнопок\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\" // Добавлен colorClass\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [inputWarnings, setInputWarnings] = useState({});\n  const currentDayRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n\n  // Сортировка данных по водителям, затем по дате и перемещение строк с классом 'highlight' в конец\n  const sortData = data => {\n    const highlightedItems = data.filter(item => item.colorClass === \"highlight\");\n    const nonHighlightedItems = data.filter(item => item.colorClass !== \"highlight\");\n\n    // Сортируем только невыделенные элементы по водителям\n    const sortedNonHighlightedItems = nonHighlightedItems.sort((a, b) => {\n      if (a.driver < b.driver) return -1;\n      if (a.driver > b.driver) return 1;\n      return 0;\n    });\n\n    // Объединяем отсортированные элементы и выделенные элементы\n    return [...sortedNonHighlightedItems, ...highlightedItems];\n  };\n  const sortedData = sortData(data);\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate,\n        updatedBy: localStorage.getItem(\"username\") // Добавляем имя пользователя\n      }));\n\n      // Добавление новых записей\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n\n      // Перезагрузка данных с сервера для синхронизации\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Добавление одной строки данных\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      } // Добавляем имя пользователя\n      );\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n\n  // Добавление строки с определенным классом\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        // Добавляем класс\n        updatedBy: localStorage.getItem(\"username\") // Добавляем имя пользователя\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const handleDeleteItem = async itemId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/data/${itemId}`);\n      setData(data.filter(item => item._id !== itemId));\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n    }\n  };\n  useEffect(() => {\n    // Прокрутка к текущему дню при обновлении данных\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [data]);\n\n  // Установка предупреждений при активации инпутов\n  const handleInputFocus = itemId => {\n    const item = data.find(item => item._id === itemId);\n    if (item) {\n      const warnings = {};\n      for (const key in item) {\n        if (item[key] !== \"\" && item[key] !== undefined) {\n          warnings[itemId] = true;\n          break;\n        }\n      }\n      setInputWarnings(warnings);\n    }\n  };\n  // Функция выхода из системы\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\"); // Очистка имени пользователя при выходе\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass(\"highlight\"),\n      children: \"Add New Item with Highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          ref: currentDayRef,\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${item.colorClass || \"\"} ${new Date(item.date).toISOString().split(\"T\")[0] === selectedDate ? \"current-day\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: new Date(item.date).toISOString().split(\"T\")[0],\n                  onChange: e => handleDateChange(e, item._id),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  onFocus: () => handleInputFocus(item._id),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 27\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver._id,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleInputChange(e, item._id, \"isTrue\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\"),\n                  onFocus: () => handleInputFocus(item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteItem(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)), Object.keys(inputWarnings).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: \"Warning: You have unsaved changes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Bh0vNkU5AZrRGFUGe0TTRf32mns=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","inputWarnings","setInputWarnings","currentDayRef","navigate","fetchData","response","get","error","console","fetchDrivers","sortData","highlightedItems","filter","item","nonHighlightedItems","sortedNonHighlightedItems","sort","a","b","sortedData","addEntriesForSelectedDate","newEntries","map","updatedBy","localStorage","getItem","Promise","all","entry","post","addNewItem","addNewItemWithClass","className","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","handleDeleteItem","delete","current","scrollIntoView","behavior","handleInputFocus","warnings","key","undefined","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","ref","onFocus","keys","length","_c","$RefreshReg$"],"sources":["D:/project/BamApp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\nimport \"./styles.css\"; // Импорт стилей для кнопок\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\", // Добавлен colorClass\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [inputWarnings, setInputWarnings] = useState({});\r\n  const currentDayRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  // Сортировка данных по водителям, затем по дате и перемещение строк с классом 'highlight' в конец\r\n  const sortData = (data) => {\r\n    const highlightedItems = data.filter(\r\n      (item) => item.colorClass === \"highlight\"\r\n    );\r\n    const nonHighlightedItems = data.filter(\r\n      (item) => item.colorClass !== \"highlight\"\r\n    );\r\n\r\n    // Сортируем только невыделенные элементы по водителям\r\n    const sortedNonHighlightedItems = nonHighlightedItems.sort((a, b) => {\r\n      if (a.driver < b.driver) return -1;\r\n      if (a.driver > b.driver) return 1;\r\n      return 0;\r\n    });\r\n\r\n    // Объединяем отсортированные элементы и выделенные элементы\r\n    return [...sortedNonHighlightedItems, ...highlightedItems];\r\n  };\r\n\r\n  const sortedData = sortData(data);\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n        updatedBy: localStorage.getItem(\"username\"), // Добавляем имя пользователя\r\n      }));\r\n\r\n      // Добавление новых записей\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      // Перезагрузка данных с сервера для синхронизации\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление одной строки данных\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        { ...newItem, updatedBy: localStorage.getItem(\"username\") } // Добавляем имя пользователя\r\n      );\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление строки с определенным классом\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className, // Добавляем класс\r\n        updatedBy: localStorage.getItem(\"username\"), // Добавляем имя пользователя\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, date: value } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const handleDeleteItem = async (itemId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/data/${itemId}`);\r\n      setData(data.filter((item) => item._id !== itemId));\r\n    } catch (error) {\r\n      console.error(\"Error deleting item:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Прокрутка к текущему дню при обновлении данных\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [data]);\r\n\r\n  // Установка предупреждений при активации инпутов\r\n  const handleInputFocus = (itemId) => {\r\n    const item = data.find((item) => item._id === itemId);\r\n    if (item) {\r\n      const warnings = {};\r\n      for (const key in item) {\r\n        if (item[key] !== \"\" && item[key] !== undefined) {\r\n          warnings[itemId] = true;\r\n          break;\r\n        }\r\n      }\r\n      setInputWarnings(warnings);\r\n    }\r\n  };\r\n // Функция выхода из системы\r\n const handleLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"username\"); // Очистка имени пользователя при выходе\r\n  navigate(\"/login\");\r\n};\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n      <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n        Add New Item with Highlight\r\n      </button>\r\n      <button onClick={handleLogout}>Logout</button> {/* Кнопка для выхода */}\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div key={day}>\r\n              <h3 ref={currentDayRef}>Day {day}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>True/False</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                    <th>Actions</th> {/* Новый столбец для действий */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item) => (\r\n                    <tr\r\n                      key={item._id}\r\n                      className={`${item.colorClass || \"\"} ${\r\n                        new Date(item.date).toISOString().split(\"T\")[0] ===\r\n                        selectedDate\r\n                          ? \"current-day\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={new Date(item.date).toISOString().split(\"T\")[0]}\r\n                          onChange={(e) => handleDateChange(e, item._id)}\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.brand || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"brand\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={item.driver || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"driver\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        >\r\n                          <option value=\"\">Select a driver</option>\r\n                          {drivers.map((driver) => (\r\n                            <option key={driver._id} value={driver._id}>\r\n                              {driver.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.customer || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"customer\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.routeNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"routeNumber\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.hours || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"hours\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue || false}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"isTrue\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.vehicleNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"vehicleNumber\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.price || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"price\")\r\n                          }\r\n                          onFocus={() => handleInputFocus(item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button onClick={() => handleDeleteItem(item._id)}>\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      {Object.keys(inputWarnings).length > 0 && (\r\n        <div className=\"warning\">Warning: You have unsaved changes!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}