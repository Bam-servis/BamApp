{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport MonthlyData from \"./MonthlyData\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const replaceSoftSign = str => {\n    return str.replace(/ъ/g, \"\");\n  };\n  const sortedData = data.sort((a, b) => {\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n    const driverComparison = a.driver.localeCompare(b.driver);\n    if (driverComparison !== 0) return driverComparison;\n    return new Date(a.date) - new Date(b.date);\n  });\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = Array.from({\n        length: 37\n      }).map((_, index) => ({\n        ...newItem,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) return;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const handleMonthChange = monthOffset => {\n    const newDate = new Date();\n    newDate.setMonth(newDate.getMonth() + monthOffset);\n    setCurrentMonth(newDate.getMonth());\n    navigate(`/month/${format(newDate, \"yyyy-MM\")}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEntriesForSelectedDate,\n          children: \"Add 37 Entries for Selected Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewItem,\n          children: \"Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMonthChange(-1),\n          children: \"Previous Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMonthChange(1),\n          children: \"Next Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonthlyData, {\n        month: currentMonth,\n        data: data,\n        drivers: drivers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JALIKxa8s9DyTZ6zujBTbcYWzOI=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","format","ru","useNavigate","MonthlyData","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","getMonth","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","replaceSoftSign","str","replace","sortedData","sort","a","b","driverComparison","localeCompare","addEntriesForSelectedDate","newEntries","Array","from","length","map","_","index","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","item","_id","put","find","catch","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","locale","handleMonthChange","monthOffset","newDate","setMonth","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","month","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MonthlyData from \"./MonthlyData\";\r\nimport \"./styles.css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const replaceSoftSign = (str) => {\r\n    return str.replace(/ъ/g, \"\");\r\n  };\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n\r\n    const driverComparison = a.driver.localeCompare(b.driver);\r\n    if (driverComparison !== 0) return driverComparison;\r\n\r\n    return new Date(a.date) - new Date(b.date);\r\n  });\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = Array.from({ length: 37 }).map((_, index) => ({\r\n        ...newItem,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) return;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const handleMonthChange = (monthOffset) => {\r\n    const newDate = new Date();\r\n    newDate.setMonth(newDate.getMonth() + monthOffset);\r\n    setCurrentMonth(newDate.getMonth());\r\n    navigate(`/month/${format(newDate, \"yyyy-MM\")}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Data Table</h1>\r\n        <div className=\"buttons\">\r\n          <button onClick={addEntriesForSelectedDate}>\r\n            Add 37 Entries for Selected Date\r\n          </button>\r\n          <button onClick={addNewItem}>Add New Item</button>\r\n          <button onClick={() => handleMonthChange(-1)}>Previous Month</button>\r\n          <button onClick={() => handleMonthChange(1)}>Next Month</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"New Driver\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      <div className=\"data\">\r\n        <h2>Current Month</h2>\r\n        <MonthlyData month={currentMonth} data={data} drivers={drivers} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}