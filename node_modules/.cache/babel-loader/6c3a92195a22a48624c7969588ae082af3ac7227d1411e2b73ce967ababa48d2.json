{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [months, setMonths] = useState([]);\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    const fetchMonths = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/months\");\n        setMonths(response.data);\n      } catch (error) {\n        console.error(\"Error fetching months:\", error);\n      }\n    };\n    fetchMonths();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const replaceSoftSign = str => {\n    return str.replace(/ъ/g, \"\");\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const getMonthYear = date => {\n    return format(date, \"MMMM yyyy\", {\n      locale: ru\n    });\n  };\n  const goToMonth = monthOffset => {\n    const newMonth = new Date();\n    newMonth.setMonth(currentMonth + monthOffset);\n    setCurrentMonth(newMonth.getMonth());\n    navigate(`/month/${format(newMonth, \"yyyy-MM\")}`);\n  };\n  const getDataForCurrentMonth = () => {\n    const startDate = new Date();\n    startDate.setDate(1);\n    startDate.setMonth(currentMonth);\n    const endDate = new Date(startDate);\n    endDate.setMonth(startDate.getMonth() + 1);\n    return data.filter(item => new Date(item.date) >= startDate && new Date(item.date) < endDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEntriesForSelectedDate,\n          children: \"Add 37 Entries for Selected Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewItem,\n          children: \"Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewItemWithClass(\"highlight\"),\n          children: \"Add New Item with Highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToMonth(-1),\n        children: \"Previous Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: getMonthYear(new Date(new Date().setMonth(currentMonth)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToMonth(1),\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: getDataForCurrentMonth().map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `data-item ${item.colorClass}`,\n        ref: item.date === selectedDate ? currentDayRef : null,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: item.date,\n            onChange: e => handleDateChange(e, item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Brand:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.brand,\n            onChange: e => handleInputChange(e, item._id, \"brand\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Driver:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: item.driver,\n            onChange: e => handleInputChange(e, item._id, \"driver\"),\n            children: drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: driver.name,\n              children: driver.name\n            }, driver._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.customer,\n            onChange: e => handleInputChange(e, item._id, \"customer\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Route Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.routeNumber,\n            onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Hours:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.hours,\n            onChange: e => handleInputChange(e, item._id, \"hours\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Vehicle Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.vehicleNumber,\n            onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.price,\n            onChange: e => handleInputChange(e, item._id, \"price\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: item.isTrue,\n              onChange: e => handleCheckboxChange(e, item._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), \"True\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteWithConfirmation(item._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1wQQydRrsolCuxBVHloZ+xk1IJ8=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","format","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","getMonth","months","setMonths","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","fetchMonths","current","scrollIntoView","behavior","block","replaceSoftSign","str","replace","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","locale","addEntriesForSelectedDate","newEntries","hardcodedData","map","item","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","getMonthYear","goToMonth","monthOffset","newMonth","setMonth","getDataForCurrentMonth","startDate","setDate","endDate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addNewItemWithClass","onChange","placeholder","ref","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [months, setMonths] = useState([]);\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMonths = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/months\");\r\n        setMonths(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching months:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMonths();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const replaceSoftSign = (str) => {\r\n    return str.replace(/ъ/g, \"\");\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const getMonthYear = (date) => {\r\n    return format(date, \"MMMM yyyy\", { locale: ru });\r\n  };\r\n\r\n  const goToMonth = (monthOffset) => {\r\n    const newMonth = new Date();\r\n    newMonth.setMonth(currentMonth + monthOffset);\r\n    setCurrentMonth(newMonth.getMonth());\r\n    navigate(`/month/${format(newMonth, \"yyyy-MM\")}`);\r\n  };\r\n\r\n  const getDataForCurrentMonth = () => {\r\n    const startDate = new Date();\r\n    startDate.setDate(1);\r\n    startDate.setMonth(currentMonth);\r\n    const endDate = new Date(startDate);\r\n    endDate.setMonth(startDate.getMonth() + 1);\r\n    return data.filter(\r\n      (item) =>\r\n        new Date(item.date) >= startDate && new Date(item.date) < endDate\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Data Table</h1>\r\n        <div className=\"buttons\">\r\n          <button onClick={addEntriesForSelectedDate}>\r\n            Add 37 Entries for Selected Date\r\n          </button>\r\n          <button onClick={addNewItem}>Add New Item</button>\r\n          <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n            Add New Item with Highlight\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"New Driver\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      <div className=\"month-navigation\">\r\n        <button onClick={() => goToMonth(-1)}>Previous Month</button>\r\n        <span>{getMonthYear(new Date(new Date().setMonth(currentMonth)))}</span>\r\n        <button onClick={() => goToMonth(1)}>Next Month</button>\r\n      </div>\r\n      <div className=\"data\">\r\n        {getDataForCurrentMonth().map((item) => (\r\n          <div\r\n            key={item._id}\r\n            className={`data-item ${item.colorClass}`}\r\n            ref={item.date === selectedDate ? currentDayRef : null}\r\n          >\r\n            <div>\r\n              <span>Date:</span>\r\n              <input\r\n                type=\"date\"\r\n                value={item.date}\r\n                onChange={(e) => handleDateChange(e, item._id)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Brand:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.brand}\r\n                onChange={(e) => handleInputChange(e, item._id, \"brand\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Driver:</span>\r\n              <select\r\n                value={item.driver}\r\n                onChange={(e) => handleInputChange(e, item._id, \"driver\")}\r\n              >\r\n                {drivers.map((driver) => (\r\n                  <option key={driver._id} value={driver.name}>\r\n                    {driver.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <span>Customer:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.customer}\r\n                onChange={(e) => handleInputChange(e, item._id, \"customer\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Route Number:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.routeNumber}\r\n                onChange={(e) => handleInputChange(e, item._id, \"routeNumber\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Hours:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.hours}\r\n                onChange={(e) => handleInputChange(e, item._id, \"hours\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Vehicle Number:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.vehicleNumber}\r\n                onChange={(e) =>\r\n                  handleInputChange(e, item._id, \"vehicleNumber\")\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>Price:</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.price}\r\n                onChange={(e) => handleInputChange(e, item._id, \"price\")}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={item.isTrue}\r\n                  onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                />\r\n                True\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button onClick={() => handleDeleteWithConfirmation(item._id)}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}