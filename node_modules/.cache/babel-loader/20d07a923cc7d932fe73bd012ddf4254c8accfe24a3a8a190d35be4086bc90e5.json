{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport \"./styles.css\"; // Импорт стилей для кнопок\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\" // Добавлен colorClass\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const navigate = useNavigate();\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n\n  // Функция выхода из системы\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\"); // Очистка имени пользователя при выходе\n    navigate(\"/login\");\n  };\n\n  // Сортировка данных по дате\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate,\n        updatedBy: localStorage.getItem(\"username\") // Добавляем имя пользователя\n      }));\n\n      // Добавление новых записей\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n\n      // Перезагрузка данных с сервера для синхронизации\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Добавление одной строки данных\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      } // Добавляем имя пользователя\n      );\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n\n  // Добавление строки с определенным классом\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        // Добавляем класс\n        updatedBy: localStorage.getItem(\"username\") // Добавляем имя пользователя\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItemWithClass(\"highlight\"),\n      children: \"Add New Item with Highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"Enter new driver name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Day \", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: item.colorClass || \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: new Date(item.date).toISOString().split(\"T\")[0],\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.brand || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"brand\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.driver || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"driver\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 27\n                  }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver._id,\n                    children: driver.name\n                  }, driver._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.customer || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"customer\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.routeNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.hours || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"hours\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue || false,\n                  onChange: e => handleInputChange(e, item._id, \"isTrue\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.vehicleNumber || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.price || \"\",\n                  onChange: e => handleInputChange(e, item._id, \"price\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1Jm8hRw/DWQj+sUrGXxbkcN0NVg=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","navigate","fetchData","response","get","error","console","fetchDrivers","handleLogout","localStorage","removeItem","sortedData","sort","a","b","addEntriesForSelectedDate","newEntries","map","item","updatedBy","getItem","Promise","all","entry","post","addNewItem","addNewItemWithClass","className","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\nimport \"./styles.css\"; // Импорт стилей для кнопок\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\", // Добавлен colorClass\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\"); // Очистка имени пользователя при выходе\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // Сортировка данных по дате\r\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n        updatedBy: localStorage.getItem(\"username\"), // Добавляем имя пользователя\r\n      }));\r\n\r\n      // Добавление новых записей\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      // Перезагрузка данных с сервера для синхронизации\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление одной строки данных\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        { ...newItem, updatedBy: localStorage.getItem(\"username\") } // Добавляем имя пользователя\r\n      );\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление строки с определенным классом\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className, // Добавляем класс\r\n        updatedBy: localStorage.getItem(\"username\"), // Добавляем имя пользователя\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, date: value } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n      <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n        Add New Item with Highlight\r\n      </button>\r\n      <button onClick={handleLogout}>Logout</button> {/* Кнопка для выхода */}\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"Enter new driver name\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div key={day}>\r\n              <h3>Day {day}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>True/False</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item) => (\r\n                    <tr key={item._id} className={item.colorClass || \"\"}>\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={\r\n                            new Date(item.date).toISOString().split(\"T\")[0]\r\n                          }\r\n                          onChange={(e) => handleDateChange(e, item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.brand || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"brand\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={item.driver || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"driver\")\r\n                          }\r\n                        >\r\n                          <option value=\"\">Select a driver</option>\r\n                          {drivers.map((driver) => (\r\n                            <option key={driver._id} value={driver._id}>\r\n                              {driver.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.customer || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"customer\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.routeNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"routeNumber\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.hours || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"hours\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue || false}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"isTrue\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.vehicleNumber || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"vehicleNumber\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={item.price || \"\"}\r\n                          onChange={(e) =>\r\n                            handleInputChange(e, item._id, \"price\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}