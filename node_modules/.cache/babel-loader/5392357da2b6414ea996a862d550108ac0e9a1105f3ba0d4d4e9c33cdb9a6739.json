{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\components\\\\MonthPage.js\",\n  _s = $RefreshSig$();\n// src/components/MonthPage.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { hardcodedData } from \"../hardcodedData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthPage = () => {\n  _s();\n  const {\n    month\n  } = useParams(); // Получаем месяц из параметров URL\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const replaceSoftSign = str => {\n    return str.replace(/ъ/g, \"\");\n  };\n  const sortedData = data.filter(item => {\n    const itemDate = new Date(item.date);\n    return format(itemDate, \"MMMM\", {\n      locale: ru\n    }) === month;\n  }).sort((a, b) => {\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n    const driverComparison = a.driver.localeCompare(b.driver);\n    if (driverComparison !== 0) return driverComparison;\n    return new Date(a.date) - new Date(b.date);\n  });\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [month, \" Data Table\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEntriesForSelectedDate,\n          children: \"Add 37 Entries for Selected Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewItem,\n          children: \"Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewItemWithClass(\"highlight\"),\n          children: \"Add New Item with Highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), days.map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Route Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"True/False\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Vehicle Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Last Edited By\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: item.colorClass || \"\",\n                ref: isToday(item.date) ? currentDayRef : null,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: item.date,\n                    onChange: e => handleDateChange(e, item._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.brand,\n                    onChange: e => handleInputChange(e, item._id, \"brand\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: item.driver,\n                    onChange: e => handleInputChange(e, item._id, \"driver\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select driver\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 29\n                    }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: driver.name,\n                      children: driver.name\n                    }, driver._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.customer,\n                    onChange: e => handleInputChange(e, item._id, \"customer\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.routeNumber,\n                    onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.hours,\n                    onChange: e => handleInputChange(e, item._id, \"hours\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: item.isTrue,\n                    onChange: e => handleCheckboxChange(e, item._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.vehicleNumber,\n                    onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.price,\n                    onChange: e => handleInputChange(e, item._id, \"price\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.updatedBy || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteWithConfirmation(item._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 25\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this))]\n      }, month, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthPage, \"lg1zcgc/WkMi914w53tmlFBInEM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MonthPage;\nexport default MonthPage;\nvar _c;\n$RefreshReg$(_c, \"MonthPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","format","ru","useParams","useNavigate","hardcodedData","jsxDEV","_jsxDEV","MonthPage","_s","month","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","isToday","itemDate","today","itemDay","getDate","getMonth","getFullYear","selectedDate","setSelectedDate","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","replaceSoftSign","str","replace","sortedData","filter","item","locale","sort","a","b","driverComparison","localeCompare","addEntriesForSelectedDate","newEntries","map","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","handleDateChange","handleAddNewDriver","trim","name","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","groupByMonthAndDay","days","day","items","ref","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/components/MonthPage.js"],"sourcesContent":["// src/components/MonthPage.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { hardcodedData } from \"../hardcodedData\";\r\n\r\nconst MonthPage = () => {\r\n  const { month } = useParams(); // Получаем месяц из параметров URL\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const replaceSoftSign = (str) => {\r\n    return str.replace(/ъ/g, \"\");\r\n  };\r\n\r\n  const sortedData = data\r\n    .filter((item) => {\r\n      const itemDate = new Date(item.date);\r\n      return format(itemDate, \"MMMM\", { locale: ru }) === month;\r\n    })\r\n    .sort((a, b) => {\r\n      if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\")\r\n        return 1;\r\n      if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\")\r\n        return -1;\r\n\r\n      const driverComparison = a.driver.localeCompare(b.driver);\r\n      if (driverComparison !== 0) return driverComparison;\r\n\r\n      return new Date(a.date) - new Date(b.date);\r\n    });\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>{month} Data Table</h1>\r\n        <div className=\"buttons\">\r\n          <button onClick={addEntriesForSelectedDate}>\r\n            Add 37 Entries for Selected Date\r\n          </button>\r\n          <button onClick={addNewItem}>Add New Item</button>\r\n          <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n            Add New Item with Highlight\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"New Driver\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n      </div>\r\n      <div className=\"data\">\r\n        {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n          <div key={month}>\r\n            <h2>{month}</h2>\r\n            {days.map(([day, items]) => (\r\n              <div key={day}>\r\n                <h3>{day}</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      <th>Brand</th>\r\n                      <th>Driver</th>\r\n                      <th>Customer</th>\r\n                      <th>Route Number</th>\r\n                      <th>Hours</th>\r\n                      <th>True/False</th>\r\n                      <th>Vehicle Number</th>\r\n                      <th>Price</th>\r\n                      <th>Last Edited By</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items.map((item) => (\r\n                      <tr\r\n                        key={item._id}\r\n                        className={item.colorClass || \"\"}\r\n                        ref={isToday(item.date) ? currentDayRef : null}\r\n                      >\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            value={item.date}\r\n                            onChange={(e) => handleDateChange(e, item._id)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.brand}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"brand\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            value={item.driver}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"driver\")\r\n                            }\r\n                          >\r\n                            <option value=\"\">Select driver</option>\r\n                            {drivers.map((driver) => (\r\n                              <option key={driver._id} value={driver.name}>\r\n                                {driver.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.customer}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"customer\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.routeNumber}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"routeNumber\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.hours}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"hours\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.isTrue}\r\n                            onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.vehicleNumber}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"vehicleNumber\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.price}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"price\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>{item.updatedBy || \"N/A\"}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() =>\r\n                              handleDeleteWithConfirmation(item._id)\r\n                            }\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}