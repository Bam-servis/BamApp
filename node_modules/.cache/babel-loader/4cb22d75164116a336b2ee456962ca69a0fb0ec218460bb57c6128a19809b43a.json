{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [user, setUser] = useState(null);\n  const [drivers, setDrivers] = useState([]); // Список водителей из базы данных\n  const [selectedDriver, setSelectedDriver] = useState(\"\"); // Выбранный водитель\n  const apiUrl = \"https://bam-app-489c6c1370a9.herokuapp.com\";\n\n  // Получение данных пользователя\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const username = localStorage.getItem(\"username\");\n        setUser(username);\n\n        // Получение всех данных с API\n        const response = await axios.get(`${apiUrl}/api/data`);\n\n        // Фильтруем данные для текущего пользователя\n        const userItems = response.data.filter(item => item.user === username);\n        setItems(userItems);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Получение списка водителей\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      try {\n        const driverResponse = await axios.get(`${apiUrl}/api/drivers`);\n        setDrivers(driverResponse.data); // Предполагается, что API возвращает массив водителей\n      } catch (error) {\n        console.error(\"Ошибка при загрузке списка водителей:\", error);\n      }\n    };\n    fetchDrivers();\n  }, []);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Вычисляем текущий и предыдущий месяц\n  const currentMonth = dayjs().month(); // Текущий месяц\n  const previousMonth = dayjs().subtract(1, \"month\").month(); // Предыдущий месяц\n\n  // Фильтруем заявки за текущий и предыдущий месяцы\n  const currentMonthItems = items.filter(item => dayjs(item.createdAt).month() === currentMonth);\n  const previousMonthItems = items.filter(item => dayjs(item.createdAt).month() === previousMonth);\n\n  // Фильтруем по выбранному водителю и проверяем наличие item.colorClass\n  const filteredItems = items.filter(item => {\n    return (!selectedDriver || item.driver === selectedDriver) &&\n    // Если водитель выбран, фильтруем по нему\n    item.colorClass !== \"\" // Проверяем наличие и непустое значение colorClass\n    ;\n  });\n\n  // Вычисляем сумму всех значений price и calcPay для отфильтрованных данных\n  const totalPrice = filteredItems.reduce((total, item) => {\n    const price = parseFloat(item.price) || 0;\n    return total + price;\n  }, 0);\n  const totalCalcPay = filteredItems.reduce((total, item) => {\n    const calcPay = parseFloat(item.calcPay) || 0;\n    return total + calcPay;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F: \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"driver\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"driver\",\n        value: selectedDriver,\n        onChange: e => setSelectedDriver(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u0441\\u0435 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), drivers.map((driver, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: driver,\n          children: driver\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432: \", filteredItems.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u0443\\u043C\\u043C \\u0437\\u0430\\u043A\\u0430\\u0437\\u043E\\u0432: \", totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 calcPay: \", totalCalcPay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0437\\u0430\\u044F\\u0432\\u043E\\u043A \\u0437\\u0430 \\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446: \", currentMonthItems.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0437\\u0430\\u044F\\u0432\\u043E\\u043A \\u0437\\u0430 \\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u043C\\u0435\\u0441\\u044F\\u0446: \", previousMonthItems.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), filteredItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" - \", item.price, \" - \", item.calcPay, \" - \", item.driver]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u0442 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"6qXYGk0D5vztnnJ8DHsuooZsWqY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","dayjs","jsxDEV","_jsxDEV","Profile","_s","items","setItems","user","setUser","drivers","setDrivers","selectedDriver","setSelectedDriver","apiUrl","fetchData","username","localStorage","getItem","response","get","userItems","data","filter","item","error","console","fetchDrivers","driverResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","currentMonth","month","previousMonth","subtract","currentMonthItems","createdAt","previousMonthItems","filteredItems","driver","colorClass","totalPrice","reduce","total","price","parseFloat","totalCalcPay","calcPay","to","htmlFor","id","value","onChange","e","target","map","index","length","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst Profile = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [drivers, setDrivers] = useState([]); // Список водителей из базы данных\r\n  const [selectedDriver, setSelectedDriver] = useState(\"\"); // Выбранный водитель\r\n  const apiUrl = \"https://bam-app-489c6c1370a9.herokuapp.com\";\r\n\r\n  // Получение данных пользователя\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const username = localStorage.getItem(\"username\");\r\n        setUser(username);\r\n\r\n        // Получение всех данных с API\r\n        const response = await axios.get(`${apiUrl}/api/data`);\r\n\r\n        // Фильтруем данные для текущего пользователя\r\n        const userItems = response.data.filter(\r\n          (item) => item.user === username\r\n        );\r\n        setItems(userItems);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке данных:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Получение списка водителей\r\n  useEffect(() => {\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const driverResponse = await axios.get(`${apiUrl}/api/drivers`);\r\n        setDrivers(driverResponse.data); // Предполагается, что API возвращает массив водителей\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке списка водителей:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  if (!user) {\r\n    return <p>Загрузка...</p>;\r\n  }\r\n\r\n  // Вычисляем текущий и предыдущий месяц\r\n  const currentMonth = dayjs().month(); // Текущий месяц\r\n  const previousMonth = dayjs().subtract(1, \"month\").month(); // Предыдущий месяц\r\n\r\n  // Фильтруем заявки за текущий и предыдущий месяцы\r\n  const currentMonthItems = items.filter(\r\n    (item) => dayjs(item.createdAt).month() === currentMonth\r\n  );\r\n  const previousMonthItems = items.filter(\r\n    (item) => dayjs(item.createdAt).month() === previousMonth\r\n  );\r\n\r\n  // Фильтруем по выбранному водителю и проверяем наличие item.colorClass\r\n  const filteredItems = items.filter((item) => {\r\n    return (\r\n      (!selectedDriver || item.driver === selectedDriver) && // Если водитель выбран, фильтруем по нему\r\n      item.colorClass !== \"\" // Проверяем наличие и непустое значение colorClass\r\n    );\r\n  });\r\n\r\n  // Вычисляем сумму всех значений price и calcPay для отфильтрованных данных\r\n  const totalPrice = filteredItems.reduce((total, item) => {\r\n    const price = parseFloat(item.price) || 0;\r\n    return total + price;\r\n  }, 0);\r\n\r\n  const totalCalcPay = filteredItems.reduce((total, item) => {\r\n    const calcPay = parseFloat(item.calcPay) || 0;\r\n    return total + calcPay;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <button>Go to Home</button>\r\n      </Link>\r\n      <h1>Профиль пользователя: {user}</h1>\r\n\r\n      {/* Инпут для выбора водителя */}\r\n      <div>\r\n        <label htmlFor=\"driver\">Выберите водителя:</label>\r\n        <select\r\n          id=\"driver\"\r\n          value={selectedDriver}\r\n          onChange={(e) => setSelectedDriver(e.target.value)}\r\n        >\r\n          <option value=\"\">Все водители</option>\r\n          {drivers.map((driver, index) => (\r\n            <option key={index} value={driver}>\r\n              {driver}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <p>Количество созданных элементов: {filteredItems.length}</p>\r\n      <p>Общее количество сумм заказов: {totalPrice}</p>\r\n      <p>Общее значение calcPay: {totalCalcPay}</p>\r\n      <p>Количество заявок за текущий месяц: {currentMonthItems.length}</p>\r\n      <p>Количество заявок за предыдущий месяц: {previousMonthItems.length}</p>\r\n\r\n      {/* Отображаем отфильтрованные элементы */}\r\n      <div>\r\n        <h2>Отфильтрованные элементы:</h2>\r\n        {filteredItems.length > 0 ? (\r\n          <ul>\r\n            {filteredItems.map((item) => (\r\n              <li key={item._id}>\r\n                {item.name} - {item.price} - {item.calcPay} - {item.driver}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Нет элементов для отображения.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}