{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\nimport { useNavigate } from \"react-router-dom\"; // Импортируем useNavigate для перенаправления\nimport \"./styles.css\"; // Импорт стилей для кнопок\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\" // Добавлен colorClass\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [username, setUsername] = useState(\"\"); // Добавлено состояние для имени пользователя\n  const navigate = useNavigate(); // Используем useNavigate для перенаправления\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    const fetchUsername = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          const response = await axios.get(\"http://localhost:5000/api/user\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          // Проверьте, какое поле содержит имя пользователя\n          setUsername(response.data.username || response.data.name || \"User\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n    fetchUsername();\n    // Получение имени пользователя из localStorage (или из API)\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // Здесь можно сделать запрос для получения данных пользователя\n      setUsername(\"User\"); // Замените это на данные пользователя из вашего API\n    }\n  }, []);\n\n  // Сортировка данных по дате\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Функция для добавления строк на каждый новый день\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n\n      // Добавление новых записей\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n\n      // Перезагрузка данных с сервера для синхронизации\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Добавление одной строки данных\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n\n  // Добавление строки с определенным классом\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className // Добавляем класс\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    setData(data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item));\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...data.find(item => item._id === itemId),\n      date: value\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) {\n        groups[monthYear] = {};\n      }\n      if (!groups[monthYear][day]) {\n        groups[monthYear][day] = [];\n      }\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setUsername(\"\"); // Сброс имени пользователя\n    navigate(\"/login\"); // Перенаправление на страницу логина\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: username && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEntriesForSelectedDate,\n        children: \"Add 37 Entries for Selected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNewItemWithClass(\"highlight\"),\n        children: \"Add New Item with Highlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newDriver,\n          onChange: e => setNewDriver(e.target.value),\n          placeholder: \"Enter new driver name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewDriver,\n          children: \"Add New Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Day \", day]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Route Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"True/False\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Vehicle Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: item.colorClass || \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: new Date(item.date).toISOString().split(\"T\")[0],\n                    onChange: e => handleDateChange(e, item._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.brand || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"brand\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: item.driver || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"driver\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a driver\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 29\n                    }, this), drivers.map(driver => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: driver._id,\n                      children: driver.name\n                    }, driver._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.customer || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"customer\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.routeNumber || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"routeNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.hours || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"hours\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: item.isTrue || false,\n                    onChange: e => handleInputChange(e, item._id, \"isTrue\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.vehicleNumber || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"vehicleNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.price || \"\",\n                    onChange: e => handleInputChange(e, item._id, \"price\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this))]\n      }, month, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fy7Ni5dkawxjQPnQtW1bVDGJYjQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","username","setUsername","navigate","fetchData","response","get","error","console","fetchDrivers","fetchUsername","token","localStorage","getItem","headers","Authorization","name","sortedData","sort","a","b","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","addNewItemWithClass","className","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","_id","put","find","catch","handleDateChange","handleAddNewDriver","trim","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","Object","entries","days","items","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\"; // Убедитесь, что путь правильный\r\nimport { useNavigate } from \"react-router-dom\"; // Импортируем useNavigate для перенаправления\r\nimport \"./styles.css\"; // Импорт стилей для кнопок\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\", // Добавлен colorClass\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [username, setUsername] = useState(\"\"); // Добавлено состояние для имени пользователя\r\n  const navigate = useNavigate(); // Используем useNavigate для перенаправления\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:5000/api/user\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          // Проверьте, какое поле содержит имя пользователя\r\n          setUsername(response.data.username || response.data.name || \"User\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n    fetchUsername();\r\n    // Получение имени пользователя из localStorage (или из API)\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      // Здесь можно сделать запрос для получения данных пользователя\r\n      setUsername(\"User\"); // Замените это на данные пользователя из вашего API\r\n    }\r\n  }, []);\r\n\r\n  // Сортировка данных по дате\r\n  const sortedData = data.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  // Функция для добавления строк на каждый новый день\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      // Добавление новых записей\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      // Перезагрузка данных с сервера для синхронизации\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление одной строки данных\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        newItem\r\n      );\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление строки с определенным классом\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className, // Добавляем класс\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n\r\n    setData(\r\n      data.map((item) =>\r\n        item._id === itemId ? { ...item, date: value } : item\r\n      )\r\n    );\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...data.find((item) => item._id === itemId),\r\n        date: value,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = {};\r\n      }\r\n\r\n      if (!groups[monthYear][day]) {\r\n        groups[monthYear][day] = [];\r\n      }\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUsername(\"\"); // Сброс имени пользователя\r\n    navigate(\"/login\"); // Перенаправление на страницу логина\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        {username && (\r\n          <div>\r\n            <p>Welcome, {username}</p>\r\n            <button onClick={handleLogout}>Logout</button>\r\n          </div>\r\n        )}\r\n      </header>\r\n      <main>\r\n        <h1>Data Table</h1>\r\n        <button onClick={addEntriesForSelectedDate}>\r\n          Add 37 Entries for Selected Date\r\n        </button>\r\n        <button onClick={addNewItem}>Add New Item</button>\r\n        <button onClick={() => addNewItemWithClass(\"highlight\")}>\r\n          Add New Item with Highlight\r\n        </button>\r\n\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={newDriver}\r\n            onChange={(e) => setNewDriver(e.target.value)}\r\n            placeholder=\"Enter new driver name\"\r\n          />\r\n          <button onClick={handleAddNewDriver}>Add New Driver</button>\r\n        </div>\r\n\r\n        {Object.entries(groupByMonthAndDay(sortedData)).map(([month, days]) => (\r\n          <div key={month}>\r\n            <h2>{month}</h2>\r\n            {Object.entries(days).map(([day, items]) => (\r\n              <div key={day}>\r\n                <h3>Day {day}</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      <th>Brand</th>\r\n                      <th>Driver</th>\r\n                      <th>Customer</th>\r\n                      <th>Route Number</th>\r\n                      <th>Hours</th>\r\n                      <th>True/False</th>\r\n                      <th>Vehicle Number</th>\r\n                      <th>Price</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items.map((item) => (\r\n                      <tr key={item._id} className={item.colorClass || \"\"}>\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            value={\r\n                              new Date(item.date).toISOString().split(\"T\")[0]\r\n                            }\r\n                            onChange={(e) => handleDateChange(e, item._id)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.brand || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"brand\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            value={item.driver || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"driver\")\r\n                            }\r\n                          >\r\n                            <option value=\"\">Select a driver</option>\r\n                            {drivers.map((driver) => (\r\n                              <option key={driver._id} value={driver._id}>\r\n                                {driver.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.customer || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"customer\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.routeNumber || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"routeNumber\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.hours || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"hours\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.isTrue || false}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"isTrue\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.vehicleNumber || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"vehicleNumber\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={item.price || \"\"}\r\n                            onChange={(e) =>\r\n                              handleInputChange(e, item._id, \"price\")\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}