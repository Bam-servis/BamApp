{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const replaceSoftSign = str => {\n    // Пример замены мягкого знака\n    return str.replace(/ъ/g, \"\");\n  };\n  const sortedData = data.sort((a, b) => {\n    // Сначала перемещаем строки с классом 'highlight' в конец\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n\n    // Затем сортируем по водителям\n    const driverComparison = a.driver.localeCompare(b.driver);\n    if (driverComparison !== 0) return driverComparison;\n\n    // И наконец сортируем по дате\n    return new Date(a.date) - new Date(b.date);\n  });\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      } // Добавляем имя пользователя\n      );\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n\n    // Обновление состояния данных\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n\n    // Отправка обновленных данных на сервер\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className,\n        updatedBy: localStorage.getItem(\"username\") // Добавляем имя пользователя\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n\n    // Показываем предупреждение перед изменением состояния чекбокса\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      // Если пользователь отменил, ничего не делаем\n      return;\n    }\n\n    // Обновление состояния данных\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      // Отправка обновленного значения на сервер\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username // Добавляем имя пользователя\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) groups[monthYear] = {};\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n\n    // Проверяем, что date - это объект Date\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const handlePreviousMonth = () => {\n    setCurrentMonth(prev => {\n      const prevMonth = new Date(prev.getFullYear(), prev.getMonth() - 1, 1);\n      return prevMonth;\n    });\n  };\n  const handleNextMonth = () => {\n    setCurrentMonth(prev => {\n      const nextMonth = new Date(prev.getFullYear(), prev.getMonth() + 1, 1);\n      return nextMonth;\n    });\n  };\n  const handleCurrentMonth = () => {\n    setCurrentMonth(new Date());\n  };\n  const monthsData = groupByMonthAndDay(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current Month: \", getMonthName(currentMonth)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCurrentMonth,\n      children: \"Go to Current Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(monthsData).map(month => {\n        if (month === getMonthName(currentMonth)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(monthsData[month]).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Day \", day]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), monthsData[month][day].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isToday(item.date) ? \"highlighted\" : item.colorClass,\n                ref: isToday(item.date) ? currentDayRef : null,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", item.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Driver: \", item.driver]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Brand: \", item.brand]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteWithConfirmation(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 25\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 23\n              }, this))]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this))\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sNJzfdm3bHZEkKn48B2TbUOZOvw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","hardcodedData","format","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","replaceSoftSign","str","replace","sortedData","sort","a","b","driverComparison","localeCompare","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","toLocaleString","month","day","getDate","push","isToday","itemDate","today","itemDay","getMonth","getFullYear","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","locale","handlePreviousMonth","prev","prevMonth","handleNextMonth","nextMonth","handleCurrentMonth","monthsData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","ref","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { format } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const replaceSoftSign = (str) => {\r\n    // Пример замены мягкого знака\r\n    return str.replace(/ъ/g, \"\");\r\n  };\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    // Сначала перемещаем строки с классом 'highlight' в конец\r\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n\r\n    // Затем сортируем по водителям\r\n    const driverComparison = a.driver.localeCompare(b.driver);\r\n    if (driverComparison !== 0) return driverComparison;\r\n\r\n    // И наконец сортируем по дате\r\n    return new Date(a.date) - new Date(b.date);\r\n  });\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        { ...newItem, updatedBy: localStorage.getItem(\"username\") } // Добавляем имя пользователя\r\n      );\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    // Обновление состояния данных\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    // Отправка обновленных данных на сервер\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n        updatedBy: localStorage.getItem(\"username\"), // Добавляем имя пользователя\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    // Показываем предупреждение перед изменением состояния чекбокса\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      // Если пользователь отменил, ничего не делаем\r\n      return;\r\n    }\r\n\r\n    // Обновление состояния данных\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      // Отправка обновленного значения на сервер\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username, // Добавляем имя пользователя\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) groups[monthYear] = {};\r\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n\r\n    // Проверяем, что date - это объект Date\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentMonth((prev) => {\r\n      const prevMonth = new Date(prev.getFullYear(), prev.getMonth() - 1, 1);\r\n      return prevMonth;\r\n    });\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentMonth((prev) => {\r\n      const nextMonth = new Date(prev.getFullYear(), prev.getMonth() + 1, 1);\r\n      return nextMonth;\r\n    });\r\n  };\r\n\r\n  const handleCurrentMonth = () => {\r\n    setCurrentMonth(new Date());\r\n  };\r\n\r\n  const monthsData = groupByMonthAndDay(data);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Current Month: {getMonthName(currentMonth)}</h1>\r\n      <button onClick={handleCurrentMonth}>Go to Current Month</button>\r\n      <button onClick={handlePreviousMonth}>Previous Month</button>\r\n      <button onClick={handleNextMonth}>Next Month</button>\r\n      <div>\r\n        {Object.keys(monthsData).map((month) => {\r\n          if (month === getMonthName(currentMonth)) {\r\n            return (\r\n              <div key={month}>\r\n                {Object.keys(monthsData[month]).map((day) => (\r\n                  <div key={day}>\r\n                    <h2>Day {day}</h2>\r\n                    {monthsData[month][day].map((item) => (\r\n                      <div\r\n                        key={item._id}\r\n                        className={\r\n                          isToday(item.date) ? \"highlighted\" : item.colorClass\r\n                        }\r\n                        ref={isToday(item.date) ? currentDayRef : null}\r\n                      >\r\n                        <p>Date: {item.date}</p>\r\n                        <p>Driver: {item.driver}</p>\r\n                        <p>Brand: {item.brand}</p>\r\n                        {/* Add more fields as necessary */}\r\n                        <button\r\n                          onClick={() => handleDeleteWithConfirmation(item._id)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}