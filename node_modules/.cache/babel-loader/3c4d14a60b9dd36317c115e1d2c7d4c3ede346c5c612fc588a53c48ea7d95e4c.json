{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\bamapp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { format, addMonths, subMonths } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const addEntriesForSelectedDate = async () => {\n    try {\n      // Assuming `hardcodedData` is an array of items with the same structure as `newItem`\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        updatedBy: localStorage.getItem(\"username\")\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue,\n      updatedBy: username\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    const isConfirmed = window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = async id => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\n    if (isConfirmed) {\n      try {\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\n        setData(data.filter(item => item._id !== id));\n      } catch (error) {\n        console.error(\"Error deleting data:\", error);\n      }\n    }\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const username = localStorage.getItem(\"username\");\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value,\n      updatedBy: username\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = format(date, \"MMMM yyyy\", {\n        locale: ru\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) groups[monthYear] = {};\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  };\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const getMonthName = date => {\n    const monthNamesInGenitive = {\n      январь: \"января\",\n      февраль: \"февраля\",\n      март: \"марта\",\n      апрель: \"апреля\",\n      май: \"мая\",\n      июнь: \"июня\",\n      июль: \"июля\",\n      август: \"августа\",\n      сентябрь: \"сентября\",\n      октябрь: \"октября\",\n      ноябрь: \"ноября\",\n      декабрь: \"декабря\"\n    };\n    const monthName = format(date, \"MMMM\", {\n      locale: ru\n    });\n    return monthNamesInGenitive[monthName] || monthName;\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\n    const day = String(d.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  const handleMonthChange = direction => {\n    const newMonth = direction === \"prev\" ? subMonths(currentMonth, 1) : addMonths(currentMonth, 1);\n    setCurrentMonth(newMonth);\n  };\n  const sortedData = data.sort((a, b) => {\n    // Если одна из строк выделена, она должна быть внизу\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\n\n    // Сортировка по дате\n    const dateComparison = new Date(a.date) - new Date(b.date);\n    if (dateComparison !== 0) return dateComparison;\n\n    // Сортировка по водителю\n    return a.driver.localeCompare(b.driver);\n  });\n\n  // Фильтрация и сортировка данных по текущему месяцу\n  const filteredData = sortedData.filter(item => {\n    const itemDate = new Date(item.date);\n    return itemDate.getMonth() === currentMonth.getMonth() && itemDate.getFullYear() === currentMonth.getFullYear();\n  }).sort((a, b) => {\n    // Дополнительная сортировка внутри текущего месяца\n    const dateComparison = new Date(a.date) - new Date(b.date);\n    return dateComparison;\n  });\n  const groupedData = groupByMonthAndDay(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"prev\"),\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMonthChange(\"next\"),\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentMonth(new Date()),\n      children: \"Current Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [getMonthName(currentMonth), \" \", currentMonth.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Driver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Route Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vehicle Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedData).map(monthYear => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"11\",\n              className: \"month-heading\",\n              children: monthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), Object.keys(groupedData[monthYear]).map(day => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"11\",\n                className: \"day-heading\",\n                children: `Day ${day}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), groupedData[monthYear][day].map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              ref: isToday(item.date) ? currentDayRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(item.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.driver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.customer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.routeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.hours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue,\n                  onChange: e => handleCheckboxChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.vehicleNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.colorClass\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteWithConfirmation(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this))]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this))]\n        }, monthYear, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newItem.date,\n        onChange: e => setNewItem({\n          ...newItem,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Brand\",\n        value: newItem.brand,\n        onChange: e => setNewItem({\n          ...newItem,\n          brand: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Driver\",\n        value: newItem.driver,\n        onChange: e => setNewItem({\n          ...newItem,\n          driver: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Customer\",\n        value: newItem.customer,\n        onChange: e => setNewItem({\n          ...newItem,\n          customer: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Route Number\",\n        value: newItem.routeNumber,\n        onChange: e => setNewItem({\n          ...newItem,\n          routeNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Hours\",\n        value: newItem.hours,\n        onChange: e => setNewItem({\n          ...newItem,\n          hours: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newItem.isTrue,\n        onChange: e => setNewItem({\n          ...newItem,\n          isTrue: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Vehicle Number\",\n        value: newItem.vehicleNumber,\n        onChange: e => setNewItem({\n          ...newItem,\n          vehicleNumber: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: newItem.price,\n        onChange: e => setNewItem({\n          ...newItem,\n          price: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Color Class\",\n        value: newItem.colorClass,\n        onChange: e => setNewItem({\n          ...newItem,\n          colorClass: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sNJzfdm3bHZEkKn48B2TbUOZOvw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","format","addMonths","subMonths","ru","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","navigate","currentDayRef","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","addEntriesForSelectedDate","newEntries","hardcodedData","map","item","Promise","all","entry","post","addNewItem","updatedBy","localStorage","getItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","username","updatedData","_id","put","find","catch","handleCheckboxChange","isConfirmed","window","confirm","handleDeleteWithConfirmation","id","delete","filter","handleDateChange","handleAddNewDriver","trim","name","groupByMonthAndDay","reduce","groups","monthYear","locale","day","getDate","push","isToday","itemDate","today","itemDay","getMonth","getFullYear","getMonthName","monthNamesInGenitive","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь","monthName","formatDate","d","year","month","String","padStart","handleMonthChange","direction","newMonth","sortedData","sort","a","b","dateComparison","localeCompare","filteredData","groupedData","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","Fragment","colSpan","className","ref","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/bamapp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format, addMonths, subMonths } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      // Assuming `hardcodedData` is an array of items with the same structure as `newItem`\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        updatedBy: localStorage.getItem(\"username\"),\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    const isConfirmed = window.confirm(\r\n      \"Вы уверены, что хотите изменить состояние этого чекбокса?\"\r\n    );\r\n    if (!isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = async (id) => {\r\n    const isConfirmed = window.confirm(\r\n      \"Are you sure you want to delete this item?\"\r\n    );\r\n    if (isConfirmed) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n        setData(data.filter((item) => item._id !== id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n        updatedBy: username,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = format(date, \"MMMM yyyy\", { locale: ru });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) groups[monthYear] = {};\r\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  const getMonthName = (date) => {\r\n    const monthNamesInGenitive = {\r\n      январь: \"января\",\r\n      февраль: \"февраля\",\r\n      март: \"марта\",\r\n      апрель: \"апреля\",\r\n      май: \"мая\",\r\n      июнь: \"июня\",\r\n      июль: \"июля\",\r\n      август: \"августа\",\r\n      сентябрь: \"сентября\",\r\n      октябрь: \"октября\",\r\n      ноябрь: \"ноября\",\r\n      декабрь: \"декабря\",\r\n    };\r\n    const monthName = format(date, \"MMMM\", { locale: ru });\r\n    return monthNamesInGenitive[monthName] || monthName;\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(d.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const handleMonthChange = (direction) => {\r\n    const newMonth =\r\n      direction === \"prev\"\r\n        ? subMonths(currentMonth, 1)\r\n        : addMonths(currentMonth, 1);\r\n    setCurrentMonth(newMonth);\r\n  };\r\n\r\n  const sortedData = data.sort((a, b) => {\r\n    // Если одна из строк выделена, она должна быть внизу\r\n    if (a.colorClass === \"highlight\" && b.colorClass !== \"highlight\") return 1;\r\n    if (a.colorClass !== \"highlight\" && b.colorClass === \"highlight\") return -1;\r\n\r\n    // Сортировка по дате\r\n    const dateComparison = new Date(a.date) - new Date(b.date);\r\n    if (dateComparison !== 0) return dateComparison;\r\n\r\n    // Сортировка по водителю\r\n    return a.driver.localeCompare(b.driver);\r\n  });\r\n\r\n  // Фильтрация и сортировка данных по текущему месяцу\r\n  const filteredData = sortedData\r\n    .filter((item) => {\r\n      const itemDate = new Date(item.date);\r\n      return (\r\n        itemDate.getMonth() === currentMonth.getMonth() &&\r\n        itemDate.getFullYear() === currentMonth.getFullYear()\r\n      );\r\n    })\r\n    .sort((a, b) => {\r\n      // Дополнительная сортировка внутри текущего месяца\r\n      const dateComparison = new Date(a.date) - new Date(b.date);\r\n      return dateComparison;\r\n    });\r\n\r\n  const groupedData = groupByMonthAndDay(filteredData);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleMonthChange(\"prev\")}>Previous Month</button>\r\n      <button onClick={() => handleMonthChange(\"next\")}>Next Month</button>\r\n      <button onClick={() => setCurrentMonth(new Date())}>Current Month</button>\r\n\r\n      <h1>\r\n        {getMonthName(currentMonth)} {currentMonth.getFullYear()}\r\n      </h1>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Brand</th>\r\n            <th>Driver</th>\r\n            <th>Customer</th>\r\n            <th>Route Number</th>\r\n            <th>Hours</th>\r\n            <th>Is True</th>\r\n            <th>Vehicle Number</th>\r\n            <th>Price</th>\r\n            <th>Color Class</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(groupedData).map((monthYear) => (\r\n            <React.Fragment key={monthYear}>\r\n              <tr>\r\n                <td colSpan=\"11\" className=\"month-heading\">\r\n                  {monthYear}\r\n                </td>\r\n              </tr>\r\n              {Object.keys(groupedData[monthYear]).map((day) => (\r\n                <React.Fragment key={day}>\r\n                  <tr>\r\n                    <td colSpan=\"11\" className=\"day-heading\">\r\n                      {`Day ${day}`}\r\n                    </td>\r\n                  </tr>\r\n                  {groupedData[monthYear][day].map((item) => (\r\n                    <tr\r\n                      key={item._id}\r\n                      ref={isToday(item.date) ? currentDayRef : null}\r\n                    >\r\n                      <td>{formatDate(item.date)}</td>\r\n                      <td>{item.brand}</td>\r\n                      <td>{item.driver}</td>\r\n                      <td>{item.customer}</td>\r\n                      <td>{item.routeNumber}</td>\r\n                      <td>{item.hours}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue}\r\n                          onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>{item.vehicleNumber}</td>\r\n                      <td>{item.price}</td>\r\n                      <td>{item.colorClass}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => handleDeleteWithConfirmation(item._id)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </React.Fragment>\r\n              ))}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div>\r\n        <h2>Add New Item</h2>\r\n        <input\r\n          type=\"date\"\r\n          value={newItem.date}\r\n          onChange={(e) => setNewItem({ ...newItem, date: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Brand\"\r\n          value={newItem.brand}\r\n          onChange={(e) => setNewItem({ ...newItem, brand: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Driver\"\r\n          value={newItem.driver}\r\n          onChange={(e) => setNewItem({ ...newItem, driver: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Customer\"\r\n          value={newItem.customer}\r\n          onChange={(e) => setNewItem({ ...newItem, customer: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Route Number\"\r\n          value={newItem.routeNumber}\r\n          onChange={(e) =>\r\n            setNewItem({ ...newItem, routeNumber: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Hours\"\r\n          value={newItem.hours}\r\n          onChange={(e) => setNewItem({ ...newItem, hours: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={newItem.isTrue}\r\n          onChange={(e) => setNewItem({ ...newItem, isTrue: e.target.checked })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Vehicle Number\"\r\n          value={newItem.vehicleNumber}\r\n          onChange={(e) =>\r\n            setNewItem({ ...newItem, vehicleNumber: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n          value={newItem.price}\r\n          onChange={(e) => setNewItem({ ...newItem, price: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Color Class\"\r\n          value={newItem.colorClass}\r\n          onChange={(e) =>\r\n            setNewItem({ ...newItem, colorClass: e.target.value })\r\n          }\r\n        />\r\n        <button onClick={addNewItem}>Add New Item</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}