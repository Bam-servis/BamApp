{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\BamSheet\\\\my-spreadsheet-app\\\\frontend\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\n// Home.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    isHighlighted: false\n  });\n\n  // Получение данных с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Добавление данных для выбранной даты\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate,\n        isHighlighted: false\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      setData([...data, ...newEntries]);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n\n  // Добавление нового элемента\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        isHighlighted: false\n      });\n      setData([...data, response.data]);\n      setNewItem({\n        date: new Date().toISOString().split(\"T\")[0],\n        brand: \"\",\n        driver: \"\",\n        customer: \"\",\n        routeNumber: \"\",\n        hours: \"\",\n        isTrue: false,\n        vehicleNumber: \"\",\n        price: \"\",\n        isHighlighted: false\n      });\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n\n  // Добавление выделенного элемента\n  const addHighlightedItem = async () => {\n    try {\n      const highlightedItem = {\n        ...newItem,\n        isHighlighted: true\n      };\n      const response = await axios.post(\"http://localhost:5000/api/data\", highlightedItem);\n      setData([...data, response.data]);\n      setNewItem({\n        date: new Date().toISOString().split(\"T\")[0],\n        brand: \"\",\n        driver: \"\",\n        customer: \"\",\n        routeNumber: \"\",\n        hours: \"\",\n        isTrue: false,\n        vehicleNumber: \"\",\n        price: \"\",\n        isHighlighted: false\n      });\n    } catch (error) {\n      console.error(\"Error adding highlighted data:\", error);\n    }\n  };\n\n  // Функция для группировки данных по месяцам и дням\n  const groupByMonthAndDay = data => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const month = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[month]) {\n        groups[month] = {};\n      }\n      if (!groups[month][day]) {\n        groups[month][day] = [];\n      }\n      groups[month][day].push(item);\n      return groups;\n    }, {});\n  };\n  const groupedData = groupByMonthAndDay(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntriesForSelectedDate,\n      children: \"Add 37 Entries for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewItem,\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addHighlightedItem,\n      style: {\n        backgroundColor: \"yellow\"\n      },\n      children: \"Add Highlighted Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate,\n      onChange: e => setSelectedDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), Object.entries(groupedData).map(([month, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), Object.entries(days).map(([day, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Route Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"True/False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vehicle Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                backgroundColor: item.isHighlighted ? \"#ffff99\" : \"transparent\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.driver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.customer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.routeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.hours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.isTrue ? \"True\" : \"False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.vehicleNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"hUGXUvyRmfiOmlA0GH1uFAnKmmM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","hardcodedData","jsxDEV","_jsxDEV","Home","_s","data","setData","selectedDate","setSelectedDate","Date","toISOString","split","newItem","setNewItem","date","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","isHighlighted","fetchData","response","get","error","console","addEntriesForSelectedDate","newEntries","map","item","Promise","all","entry","post","addNewItem","addHighlightedItem","highlightedItem","groupByMonthAndDay","reduce","groups","month","toLocaleString","day","getDate","push","groupedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","type","value","onChange","e","target","Object","entries","days","items","_id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/BamSheet/my-spreadsheet-app/frontend/src/home.js"],"sourcesContent":["// Home.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    isHighlighted: false,\r\n  });\r\n\r\n  // Получение данных с сервера\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Добавление данных для выбранной даты\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n        isHighlighted: false,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      setData([...data, ...newEntries]);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление нового элемента\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        isHighlighted: false,\r\n      });\r\n      setData([...data, response.data]);\r\n      setNewItem({\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n        brand: \"\",\r\n        driver: \"\",\r\n        customer: \"\",\r\n        routeNumber: \"\",\r\n        hours: \"\",\r\n        isTrue: false,\r\n        vehicleNumber: \"\",\r\n        price: \"\",\r\n        isHighlighted: false,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление выделенного элемента\r\n  const addHighlightedItem = async () => {\r\n    try {\r\n      const highlightedItem = { ...newItem, isHighlighted: true };\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/data\",\r\n        highlightedItem\r\n      );\r\n      setData([...data, response.data]);\r\n      setNewItem({\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n        brand: \"\",\r\n        driver: \"\",\r\n        customer: \"\",\r\n        routeNumber: \"\",\r\n        hours: \"\",\r\n        isTrue: false,\r\n        vehicleNumber: \"\",\r\n        price: \"\",\r\n        isHighlighted: false,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error adding highlighted data:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для группировки данных по месяцам и дням\r\n  const groupByMonthAndDay = (data) => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[month]) {\r\n        groups[month] = {};\r\n      }\r\n\r\n      if (!groups[month][day]) {\r\n        groups[month][day] = [];\r\n      }\r\n\r\n      groups[month][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const groupedData = groupByMonthAndDay(data);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Table</h1>\r\n      <button onClick={addEntriesForSelectedDate}>\r\n        Add 37 Entries for Selected Date\r\n      </button>\r\n      <button onClick={addNewItem}>Add New Item</button>\r\n      <button\r\n        onClick={addHighlightedItem}\r\n        style={{ backgroundColor: \"yellow\" }}\r\n      >\r\n        Add Highlighted Item\r\n      </button>\r\n\r\n      <input\r\n        type=\"date\"\r\n        value={selectedDate}\r\n        onChange={(e) => setSelectedDate(e.target.value)}\r\n      />\r\n\r\n      {Object.entries(groupedData).map(([month, days]) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.entries(days).map(([day, items]) => (\r\n            <div key={day}>\r\n              <h3>{day}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Brand</th>\r\n                    <th>Driver</th>\r\n                    <th>Customer</th>\r\n                    <th>Route Number</th>\r\n                    <th>Hours</th>\r\n                    <th>True/False</th>\r\n                    <th>Vehicle Number</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.map((item) => (\r\n                    <tr\r\n                      key={item._id}\r\n                      style={{\r\n                        backgroundColor: item.isHighlighted\r\n                          ? \"#ffff99\"\r\n                          : \"transparent\",\r\n                      }}\r\n                    >\r\n                      <td>{item.date}</td>\r\n                      <td>{item.brand}</td>\r\n                      <td>{item.driver}</td>\r\n                      <td>{item.customer}</td>\r\n                      <td>{item.routeNumber}</td>\r\n                      <td>{item.hours}</td>\r\n                      <td>{item.isTrue ? \"True\" : \"False\"}</td>\r\n                      <td>{item.vehicleNumber}</td>\r\n                      <td>{item.price}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}