{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BamApp\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { hardcodedData } from \"./hardcodedData\";\nimport \"./styles.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [newDriver, setNewDriver] = useState(\"\");\n  const [newItem, setNewItem] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    brand: \"\",\n    driver: \"\",\n    customer: \"\",\n    routeNumber: \"\",\n    hours: \"\",\n    isTrue: false,\n    vehicleNumber: \"\",\n    price: \"\",\n    colorClass: \"\"\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\n  const navigate = useNavigate();\n  const currentDayRef = useRef(null);\n  const [activeInput, setActiveInput] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/data\");\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const fetchDrivers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\n        setDrivers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching drivers:\", error);\n      }\n    };\n    fetchData();\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    if (currentDayRef.current) {\n      currentDayRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [data]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  const replaceSoftSign = str => str.replace(/ъ/g, '');\n  const sortedData = useMemo(() => {\n    return data.sort((a, b) => {\n      if (a.colorClass === 'highlight' && b.colorClass !== 'highlight') return 1;\n      if (a.colorClass !== 'highlight' && b.colorClass === 'highlight') return -1;\n      const driverComparison = a.driver.localeCompare(b.driver);\n      if (driverComparison !== 0) return driverComparison;\n      return new Date(a.date) - new Date(b.date);\n    });\n  }, [data]);\n  const groupByMonthAndDay = useMemo(() => {\n    return data.reduce((groups, item) => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const day = date.getDate();\n      if (!groups[monthYear]) groups[monthYear] = {};\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\n      groups[monthYear][day].push(item);\n      return groups;\n    }, {});\n  }, [data]);\n  const addEntriesForSelectedDate = async () => {\n    try {\n      const newEntries = hardcodedData.map(item => ({\n        ...item,\n        date: selectedDate\n      }));\n      await Promise.all(newEntries.map(entry => axios.post(\"http://localhost:5000/api/data\", entry)));\n      const response = await axios.get(\"http://localhost:5000/api/data\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error adding entries:\", error);\n    }\n  };\n  const addNewItem = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  const handleInputChange = (e, itemId, fieldName) => {\n    const {\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      [fieldName]: updatedValue\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      [fieldName]: updatedValue\n    }).catch(error => console.error(\"Error saving data:\", error));\n  };\n  const addNewItemWithClass = async className => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\n        ...newItem,\n        colorClass: className\n      });\n      setData([...data, response.data]);\n    } catch (error) {\n      console.error(\"Error adding data with class:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/data/${id}`);\n      setData(data.filter(item => item._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n    }\n  };\n  const handleCheckboxChange = async (e, itemId) => {\n    const {\n      checked\n    } = e.target;\n    if (!window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\")) return;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      isTrue: checked\n    } : item);\n    setData(updatedData);\n    try {\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\n        ...updatedData.find(item => item._id === itemId),\n        isTrue: checked\n      });\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  const handleDeleteWithConfirmation = id => {\n    if (window.confirm(\"Are you sure you want to delete this item?\")) handleDelete(id);\n  };\n  const handleDateChange = (e, itemId) => {\n    const {\n      value\n    } = e.target;\n    const updatedData = data.map(item => item._id === itemId ? {\n      ...item,\n      date: value\n    } : item);\n    setData(updatedData);\n    axios.put(`http://localhost:5000/api/data/${itemId}`, {\n      ...updatedData.find(item => item._id === itemId),\n      date: value\n    }).catch(error => console.error(\"Error updating date:\", error));\n  };\n  const handleAddNewDriver = async () => {\n    if (newDriver.trim() === \"\") return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\n        name: newDriver\n      });\n      setDrivers([...drivers, response.data]);\n      setNewDriver(\"\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error);\n    }\n  };\n  const isToday = itemDate => {\n    const today = new Date();\n    const itemDay = new Date(itemDate);\n    return today.getDate() === itemDay.getDate() && today.getMonth() === itemDay.getMonth() && today.getFullYear() === itemDay.getFullYear();\n  };\n  const showWarning = inputName => {\n    if (activeInput === inputName) return;\n    const confirmed = window.confirm(\"Are you sure you want to make changes?\");\n    if (confirmed) setActiveInput(inputName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEntriesForSelectedDate,\n        children: \"Add Entries for Selected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDriver,\n        onChange: e => setNewDriver(e.target.value),\n        placeholder: \"New Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNewDriver,\n        children: \"Add Driver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"brand\",\n        value: newItem.brand,\n        onChange: e => setNewItem({\n          ...newItem,\n          brand: e.target.value\n        }),\n        onFocus: () => showWarning(\"brand\"),\n        placeholder: \"Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), Object.keys(groupByMonthAndDay).map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), Object.keys(groupByMonthAndDay[month]).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          ref: isToday(new Date()) ? currentDayRef : null,\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupByMonthAndDay[month][day].map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: item.colorClass,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.driver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: item.isTrue,\n                  onChange: e => handleCheckboxChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: item.date,\n                  onChange: e => handleDateChange(e, item._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteWithConfirmation(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this))]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"5XK5n7kglIcUQ7xg2yr7USrrHkM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","axios","hardcodedData","useNavigate","jsxDEV","_jsxDEV","Home","_s","data","setData","drivers","setDrivers","newDriver","setNewDriver","newItem","setNewItem","date","Date","toISOString","split","brand","driver","customer","routeNumber","hours","isTrue","vehicleNumber","price","colorClass","selectedDate","setSelectedDate","navigate","currentDayRef","activeInput","setActiveInput","fetchData","response","get","error","console","fetchDrivers","current","scrollIntoView","behavior","block","handleLogout","localStorage","removeItem","replaceSoftSign","str","replace","sortedData","sort","a","b","driverComparison","localeCompare","groupByMonthAndDay","reduce","groups","item","monthYear","toLocaleString","month","day","getDate","push","addEntriesForSelectedDate","newEntries","map","Promise","all","entry","post","addNewItem","handleInputChange","e","itemId","fieldName","value","type","checked","target","updatedValue","updatedData","_id","put","find","catch","addNewItemWithClass","className","handleDelete","id","delete","filter","handleCheckboxChange","window","confirm","handleDeleteWithConfirmation","handleDateChange","handleAddNewDriver","trim","name","isToday","itemDate","today","itemDay","getMonth","getFullYear","showWarning","inputName","confirmed","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onFocus","Object","keys","ref","_c","$RefreshReg$"],"sources":["D:/project/BamApp/src/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { hardcodedData } from \"./hardcodedData\";\r\nimport \"./styles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [newDriver, setNewDriver] = useState(\"\");\r\n  const [newItem, setNewItem] = useState({\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    brand: \"\",\r\n    driver: \"\",\r\n    customer: \"\",\r\n    routeNumber: \"\",\r\n    hours: \"\",\r\n    isTrue: false,\r\n    vehicleNumber: \"\",\r\n    price: \"\",\r\n    colorClass: \"\",\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0]);\r\n  const navigate = useNavigate();\r\n  const currentDayRef = useRef(null);\r\n  const [activeInput, setActiveInput] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/data\");\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchDrivers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/drivers\");\r\n        setDrivers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching drivers:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchDrivers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDayRef.current) {\r\n      currentDayRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  }, [data]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const replaceSoftSign = (str) => str.replace(/ъ/g, '');\r\n\r\n  const sortedData = useMemo(() => {\r\n    return data.sort((a, b) => {\r\n      if (a.colorClass === 'highlight' && b.colorClass !== 'highlight') return 1;\r\n      if (a.colorClass !== 'highlight' && b.colorClass === 'highlight') return -1;\r\n\r\n      const driverComparison = a.driver.localeCompare(b.driver);\r\n      if (driverComparison !== 0) return driverComparison;\r\n\r\n      return new Date(a.date) - new Date(b.date);\r\n    });\r\n  }, [data]);\r\n\r\n  const groupByMonthAndDay = useMemo(() => {\r\n    return data.reduce((groups, item) => {\r\n      const date = new Date(item.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"long\" });\r\n      const day = date.getDate();\r\n\r\n      if (!groups[monthYear]) groups[monthYear] = {};\r\n      if (!groups[monthYear][day]) groups[monthYear][day] = [];\r\n\r\n      groups[monthYear][day].push(item);\r\n      return groups;\r\n    }, {});\r\n  }, [data]);\r\n\r\n  const addEntriesForSelectedDate = async () => {\r\n    try {\r\n      const newEntries = hardcodedData.map((item) => ({\r\n        ...item,\r\n        date: selectedDate,\r\n      }));\r\n\r\n      await Promise.all(\r\n        newEntries.map((entry) =>\r\n          axios.post(\"http://localhost:5000/api/data\", entry)\r\n        )\r\n      );\r\n\r\n      const response = await axios.get(\"http://localhost:5000/api/data\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error adding entries:\", error);\r\n    }\r\n  };\r\n\r\n  const addNewItem = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", newItem);\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, itemId, fieldName) => {\r\n    const { value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, [fieldName]: updatedValue } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        [fieldName]: updatedValue,\r\n      })\r\n      .catch((error) => console.error(\"Error saving data:\", error));\r\n  };\r\n\r\n  const addNewItemWithClass = async (className) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/data\", {\r\n        ...newItem,\r\n        colorClass: className,\r\n      });\r\n      setData([...data, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding data with class:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/data/${id}`);\r\n      setData(data.filter(item => item._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = async (e, itemId) => {\r\n    const { checked } = e.target;\r\n\r\n    if (!window.confirm(\"Вы уверены, что хотите изменить состояние этого чекбокса?\")) return;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, isTrue: checked } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        isTrue: checked,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteWithConfirmation = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this item?\")) handleDelete(id);\r\n  };\r\n\r\n  const handleDateChange = (e, itemId) => {\r\n    const { value } = e.target;\r\n\r\n    const updatedData = data.map((item) =>\r\n      item._id === itemId ? { ...item, date: value } : item\r\n    );\r\n    setData(updatedData);\r\n\r\n    axios\r\n      .put(`http://localhost:5000/api/data/${itemId}`, {\r\n        ...updatedData.find((item) => item._id === itemId),\r\n        date: value,\r\n      })\r\n      .catch((error) => console.error(\"Error updating date:\", error));\r\n  };\r\n\r\n  const handleAddNewDriver = async () => {\r\n    if (newDriver.trim() === \"\") return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/drivers\", {\r\n        name: newDriver,\r\n      });\r\n      setDrivers([...drivers, response.data]);\r\n      setNewDriver(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding driver:\", error);\r\n    }\r\n  };\r\n\r\n  const isToday = (itemDate) => {\r\n    const today = new Date();\r\n    const itemDay = new Date(itemDate);\r\n    return (\r\n      today.getDate() === itemDay.getDate() &&\r\n      today.getMonth() === itemDay.getMonth() &&\r\n      today.getFullYear() === itemDay.getFullYear()\r\n    );\r\n  };\r\n\r\n  const showWarning = (inputName) => {\r\n    if (activeInput === inputName) return;\r\n    const confirmed = window.confirm(\"Are you sure you want to make changes?\");\r\n    if (confirmed) setActiveInput(inputName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <div>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <button onClick={addEntriesForSelectedDate}>Add Entries for Selected Date</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newDriver}\r\n          onChange={(e) => setNewDriver(e.target.value)}\r\n          placeholder=\"New Driver\"\r\n        />\r\n        <button onClick={handleAddNewDriver}>Add Driver</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"brand\"\r\n          value={newItem.brand}\r\n          onChange={(e) => setNewItem({ ...newItem, brand: e.target.value })}\r\n          onFocus={() => showWarning(\"brand\")}\r\n          placeholder=\"Brand\"\r\n        />\r\n        {/* Repeat similar input fields for other attributes */}\r\n        <button onClick={addNewItem}>Add New Item</button>\r\n      </div>\r\n      {Object.keys(groupByMonthAndDay).map((month) => (\r\n        <div key={month}>\r\n          <h2>{month}</h2>\r\n          {Object.keys(groupByMonthAndDay[month]).map((day) => (\r\n            <div key={day}>\r\n              <h3 ref={isToday(new Date()) ? currentDayRef : null}>{day}</h3>\r\n              <table>\r\n                <tbody>\r\n                  {groupByMonthAndDay[month][day].map((item) => (\r\n                    <tr key={item._id} className={item.colorClass}>\r\n                      <td>{item.date}</td>\r\n                      <td>{item.driver}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={item.isTrue}\r\n                          onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={item.date}\r\n                          onChange={(e) => handleDateChange(e, item._id)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <button onClick={() => handleDeleteWithConfirmation(item._id)}>Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}